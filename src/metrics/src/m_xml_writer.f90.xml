<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../fmx.xsl"?>
<fmx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="m_xml_writer.f90">
    <context>
        <time>2025-03-09T18:18:31</time>
        <version>1.0.0.1</version>
        <path>src</path>
        <path_to_root>../</path_to_root>
        <project>Fommons</project>
        <name>m_xml_writer.f90</name>
        <copyright>Copyright © 2020, Fran Martinez Fadrique &lt;Fran.Martinez.Fadrique@gmail.com&gt;</copyright>
    </context>
    <units>
        <unit name="m_xml_writer" type="module">
            <main>
                <lines>
                    <source percent="57.64">132</source>
                    <comments percent="24.02">55</comments>
                    <empty percent="18.34">42</empty>
                    <total>229</total>
                </lines>
                <complexity>
                    <minimum>0</minimum>
                    <maximum>0</maximum>
                    <average>0.00</average>
                </complexity>
                <nesting>
                    <minimum>0</minimum>
                    <maximum>0</maximum>
                    <average>0.00</average>
                </nesting>
                <methods>0</methods>
            </main>
            <methods>
                <method name="xml_writer_assign" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="52.38">11</source>
                            <comments percent="19.05">4</comments>
                            <empty percent="28.57">6</empty>
                            <total>21</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_attributes_to_string" type="function">
                    <statistics>
                        <lines>
                            <source percent="38.71">12</source>
                            <comments percent="25.81">8</comments>
                            <empty percent="35.48">11</empty>
                            <total>31</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_default" type="function">
                    <statistics>
                        <lines>
                            <source percent="40.00">6</source>
                            <comments percent="26.67">4</comments>
                            <empty percent="33.33">5</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_fhandler" type="function">
                    <statistics>
                        <lines>
                            <source percent="33.33">6</source>
                            <comments percent="27.78">5</comments>
                            <empty percent="38.89">7</empty>
                            <total>18</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_get_indent_level" type="function">
                    <statistics>
                        <lines>
                            <source percent="33.33">5</source>
                            <comments percent="26.67">4</comments>
                            <empty percent="40.00">6</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_get_unit" type="function">
                    <statistics>
                        <lines>
                            <source percent="33.33">5</source>
                            <comments percent="26.67">4</comments>
                            <empty percent="40.00">6</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_indent_decrease" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="46.67">7</source>
                            <comments percent="20.00">3</comments>
                            <empty percent="33.33">5</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_indent_increase" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="46.67">7</source>
                            <comments percent="20.00">3</comments>
                            <empty percent="33.33">5</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_set_indent_level" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="37.50">6</source>
                            <comments percent="25.00">4</comments>
                            <empty percent="37.50">6</empty>
                            <total>16</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_unit" type="function">
                    <statistics>
                        <lines>
                            <source percent="47.83">22</source>
                            <comments percent="23.91">11</comments>
                            <empty percent="28.26">13</empty>
                            <total>46</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>5</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_character_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="40.00">20</source>
                            <comments percent="26.00">13</comments>
                            <empty percent="34.00">17</empty>
                            <total>50</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>5</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>3</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_character_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_comment_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="40.00">8</source>
                            <comments percent="25.00">5</comments>
                            <empty percent="35.00">7</empty>
                            <total>20</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_comment_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">5</source>
                            <comments percent="26.67">4</comments>
                            <empty percent="40.00">6</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_complex_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="35.48">11</source>
                            <comments percent="29.03">9</comments>
                            <empty percent="35.48">11</empty>
                            <total>31</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_complex_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_double_complex_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="38.89">14</source>
                            <comments percent="27.78">10</comments>
                            <empty percent="33.33">12</empty>
                            <total>36</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_double_complex_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_double_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="42.11">16</source>
                            <comments percent="26.32">10</comments>
                            <empty percent="31.58">12</empty>
                            <total>38</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>3</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_double_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_empty_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="50.00">14</source>
                            <comments percent="21.43">6</comments>
                            <empty percent="28.57">8</empty>
                            <total>28</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>4</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_empty_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">6</source>
                            <comments percent="27.78">5</comments>
                            <empty percent="38.89">7</empty>
                            <total>18</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_end_tag_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="43.90">18</source>
                            <comments percent="24.39">10</comments>
                            <empty percent="31.71">13</empty>
                            <total>41</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>5</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>3</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_end_tag_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">6</source>
                            <comments percent="27.78">5</comments>
                            <empty percent="38.89">7</empty>
                            <total>18</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_int1_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_int1_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_int2_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_int2_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_int8_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="42.11">16</source>
                            <comments percent="26.32">10</comments>
                            <empty percent="31.58">12</empty>
                            <total>38</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>3</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_int8_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_integer_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_integer_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_logical_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">10</source>
                            <comments percent="30.00">9</comments>
                            <empty percent="36.67">11</empty>
                            <total>30</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_logical_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_logical1_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="41.18">14</source>
                            <comments percent="26.47">9</comments>
                            <empty percent="32.35">11</empty>
                            <total>34</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>3</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_logical1_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_logical2_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="41.18">14</source>
                            <comments percent="26.47">9</comments>
                            <empty percent="32.35">11</empty>
                            <total>34</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>3</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_logical2_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_processing_instruction_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="38.46">15</source>
                            <comments percent="25.64">10</comments>
                            <empty percent="35.90">14</empty>
                            <total>39</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>3</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>3</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_processing_instruction_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">6</source>
                            <comments percent="27.78">5</comments>
                            <empty percent="38.89">7</empty>
                            <total>18</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_real_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="42.11">16</source>
                            <comments percent="26.32">10</comments>
                            <empty percent="31.58">12</empty>
                            <total>38</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>3</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_real_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_root_end_tag_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="38.10">8</source>
                            <comments percent="28.57">6</comments>
                            <empty percent="33.33">7</empty>
                            <total>21</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_root_end_tag_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">5</source>
                            <comments percent="26.67">4</comments>
                            <empty percent="40.00">6</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_root_start_tag_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="53.73">36</source>
                            <comments percent="25.37">17</comments>
                            <empty percent="20.90">14</empty>
                            <total>67</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>7</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_root_start_tag_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_start_tag_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="45.95">34</source>
                            <comments percent="22.97">17</comments>
                            <empty percent="31.08">23</empty>
                            <total>74</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>10</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>4</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_start_tag_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">7</source>
                            <comments percent="28.57">6</comments>
                            <empty percent="38.10">8</empty>
                            <total>21</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_string_terminal_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_string_terminal_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_stylesheet_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">8</source>
                            <comments percent="29.17">7</comments>
                            <empty percent="37.50">9</empty>
                            <total>24</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_stylesheet_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">5</source>
                            <comments percent="26.67">4</comments>
                            <empty percent="40.00">6</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_version_character" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="34.38">11</source>
                            <comments percent="28.13">9</comments>
                            <empty percent="37.50">12</empty>
                            <total>32</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_version_default" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="34.78">8</source>
                            <comments percent="26.09">6</comments>
                            <empty percent="39.13">9</empty>
                            <total>23</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xml_writer_write_version_string" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">6</source>
                            <comments percent="27.78">5</comments>
                            <empty percent="38.89">7</empty>
                            <total>18</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
            </methods>
            <statistics>
                <lines>
                    <source percent="41.08">700</source>
                    <comments percent="26.47">451</comments>
                    <empty percent="32.45">553</empty>
                    <total>1704</total>
                </lines>
                <complexity>
                    <minimum>1</minimum>
                    <maximum>10</maximum>
                    <average>1.89</average>
                </complexity>
                <nesting>
                    <minimum>1</minimum>
                    <maximum>4</maximum>
                    <average>1.44</average>
                </nesting>
                <methods>55</methods>
            </statistics>
        </unit>
    </units>
    <statistics>
        <lines>
            <source percent="41.08">700</source>
            <comments percent="26.47">451</comments>
            <empty percent="32.45">553</empty>
            <total>1704</total>
        </lines>
        <complexity>
            <minimum>1</minimum>
            <maximum>10</maximum>
            <average>1.89</average>
        </complexity>
        <nesting>
            <minimum>1</minimum>
            <maximum>4</maximum>
            <average>1.44</average>
        </nesting>
        <methods>55</methods>
    </statistics>
    <code>
        <line t="M" i="1" b="0" n="0">module m_xml_writer</line>
        <line t="M" i="2" b="0" n="0"></line>
        <line t="C" i="3" b="0" n="0">!------------------------------------------------------------------------------</line>
        <line t="C" i="4" b="0" n="0">! Copyright : 2025, Fran Martinez Fadrique &lt;Fran.Martinez.Fadrique@gmail.com&gt;</line>
        <line t="C" i="5" b="0" n="0">! Project   : Atlantis</line>
        <line t="C" i="6" b="0" n="0">! Author    : Fran Martinez Fadrique</line>
        <line t="C" i="7" b="0" n="0">! Language  : Object Oriented Fortran 2018</line>
        <line t="C" i="8" b="0" n="0">! Synopsis  : XML stream writer</line>
        <line t="C" i="9" b="0" n="0">!</line>
        <line t="C" i="10" b="0" n="0">! License   : This file is part of Fommons.</line>
        <line t="C" i="11" b="0" n="0">!</line>
        <line t="C" i="12" b="0" n="0">!             Fommons is free software: you can redistribute it and/or modify</line>
        <line t="C" i="13" b="0" n="0">!             it under the terms of the GNU Lesser General Public License as</line>
        <line t="C" i="14" b="0" n="0">!             published by the Free Software Foundation, either version 3 of</line>
        <line t="C" i="15" b="0" n="0">!             the License, or (at your option) any later version.</line>
        <line t="C" i="16" b="0" n="0">!</line>
        <line t="C" i="17" b="0" n="0">!             Fommons is distributed in the hope that it will be useful,</line>
        <line t="C" i="18" b="0" n="0">!             but WITHOUT ANY WARRANTY; without even the implied warranty of</line>
        <line t="C" i="19" b="0" n="0">!             MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</line>
        <line t="C" i="20" b="0" n="0">!             See the GNU Lesser General Public License for more details.</line>
        <line t="C" i="21" b="0" n="0">!</line>
        <line t="C" i="22" b="0" n="0">!             You should have received a copy of the GNU Lesser General Public</line>
        <line t="C" i="23" b="0" n="0">!             License along with Fommons.  </line>
        <line t="C" i="24" b="0" n="0">!             If not, see &lt;http://www.gnu.org/licenses/&gt;.</line>
        <line t="C" i="25" b="0" n="0">!------------------------------------------------------------------------------</line>
        <line t="C" i="26" b="0" n="0"></line>
        <line t="C" i="27" b="0" n="0">!- Start of use statements ----------------------------------------------------</line>
        <line t="C" i="28" b="0" n="0"></line>
        <line t="X" i="29" b="0" n="0">  use, intrinsic :: iso_fortran_env</line>
        <line t="X" i="30" b="0" n="0"></line>
        <line t="X" i="31" b="0" n="0">  use m_util_convert</line>
        <line t="X" i="32" b="0" n="0">  use m_object</line>
        <line t="X" i="33" b="0" n="0">  use m_string</line>
        <line t="X" i="34" b="0" n="0">  use m_messages</line>
        <line t="X" i="35" b="0" n="0">  use m_file_handler</line>
        <line t="X" i="36" b="0" n="0"></line>
        <line t="X" i="37" b="0" n="0">  use m_xml_attribute</line>
        <line t="X" i="38" b="0" n="0">  use m_xml_writer_settings</line>
        <line t="X" i="39" b="0" n="0">  use m_xml_encoder</line>
        <line t="X" i="40" b="0" n="0"></line>
        <line t="C" i="41" b="0" n="0">!- End of use statements ------------------------------------------------------</line>
        <line t="C" i="42" b="0" n="0"></line>
        <line t="X" i="43" b="0" n="0">  implicit none</line>
        <line t="X" i="44" b="0" n="0"></line>
        <line t="C" i="45" b="0" n="0">!- Start of Public/Private declarations ---------------------------------------</line>
        <line t="C" i="46" b="0" n="0"></line>
        <line t="X" i="47" b="0" n="0">  private</line>
        <line t="X" i="48" b="0" n="0">  public t_xml_writer</line>
        <line t="X" i="49" b="0" n="0">  public xml_writer</line>
        <line t="X" i="50" b="0" n="0"></line>
        <line t="C" i="51" b="0" n="0">!- End of Public/Private declarations -----------------------------------------</line>
        <line t="C" i="52" b="0" n="0"></line>
        <line t="C" i="53" b="0" n="0">!- Start of module variable declarations --------------------------------------</line>
        <line t="C" i="54" b="0" n="0"></line>
        <line t="C" i="55" b="0" n="0">! Buffer parameters</line>
        <line t="X" i="56" b="0" n="0">  integer, parameter :: xml_buffer_size = 4096</line>
        <line t="X" i="57" b="0" n="0"></line>
        <line t="C" i="58" b="0" n="0">! XML type for parser handling</line>
        <line t="T" i="59" b="0" n="0">  type, extends(t_object) :: t_xml_writer</line>
        <line t="X" i="60" b="0" n="0">    private</line>
        <line t="X" i="61" b="0" n="0"></line>
        <line t="C" i="62" b="0" n="0">!     Writing unit (must be initialised in constructor)</line>
        <line t="X" i="63" b="0" n="0">      integer :: unit = -1</line>
        <line t="X" i="64" b="0" n="0"></line>
        <line t="C" i="65" b="0" n="0">!     XML serialization settings</line>
        <line t="X" i="66" b="0" n="0">      type(t_xml_writer_settings) :: settings</line>
        <line t="X" i="67" b="0" n="0"></line>
        <line t="C" i="68" b="0" n="0">!     Encoder instance</line>
        <line t="X" i="69" b="0" n="0">      type(t_xml_encoder) :: encoder</line>
        <line t="X" i="70" b="0" n="0"></line>
        <line t="C" i="71" b="0" n="0">!     Flag to activate indentation</line>
        <line t="X" i="72" b="0" n="0">      logical :: indent = .false.</line>
        <line t="X" i="73" b="0" n="0"></line>
        <line t="C" i="74" b="0" n="0">!     Indentation level</line>
        <line t="X" i="75" b="0" n="0">      integer :: indent_level = 0</line>
        <line t="X" i="76" b="0" n="0"></line>
        <line t="C" i="77" b="0" n="0">!     Split into lines</line>
        <line t="X" i="78" b="0" n="0">      logical :: lines = .true.</line>
        <line t="X" i="79" b="0" n="0"></line>
        <line t="C" i="80" b="0" n="0">!     Indentation characters (acutal indent, not the same as settings)</line>
        <line t="X" i="81" b="0" n="0">      character(len=:), allocatable :: indent_chars</line>
        <line t="X" i="82" b="0" n="0"></line>
        <line t="C" i="83" b="0" n="0">!     Flag to generate independent records</line>
        <line t="X" i="84" b="0" n="0">      character(len=3) :: advance = 'yes'</line>
        <line t="X" i="85" b="0" n="0"></line>
        <line t="X" i="86" b="0" n="0">    contains</line>
        <line t="X" i="87" b="0" n="0"></line>
        <line t="C" i="88" b="0" n="0">!     Assignment operator</line>
        <line t="X" i="89" b="0" n="0">      generic :: Assignment(=) =&gt; xml_writer_assign</line>
        <line t="X" i="90" b="0" n="0">      procedure, private :: xml_writer_assign</line>
        <line t="X" i="91" b="0" n="0"></line>
        <line t="C" i="92" b="0" n="0">!     Access function interfaces</line>
        <line t="X" i="93" b="0" n="0">      procedure :: get_unit =&gt; xml_writer_get_unit</line>
        <line t="X" i="94" b="0" n="0"></line>
        <line t="C" i="95" b="0" n="0">!     Interface for writing of terminal XML tags</line>
        <line t="X" i="96" b="0" n="0">      generic :: write_terminal =&gt; xml_writer_write_empty_terminal_character, &amp;</line>
        <line t="X" i="97" b="0" n="0">                                   xml_writer_write_empty_terminal_string, &amp;</line>
        <line t="X" i="98" b="0" n="0">                                   xml_writer_write_character_terminal_character, &amp;</line>
        <line t="X" i="99" b="0" n="0">                                   xml_writer_write_character_terminal_string, &amp;</line>
        <line t="X" i="100" b="0" n="0">                                   xml_writer_write_string_terminal_character, &amp;</line>
        <line t="X" i="101" b="0" n="0">                                   xml_writer_write_string_terminal_string, &amp;</line>
        <line t="X" i="102" b="0" n="0">                                   xml_writer_write_int1_terminal_character, &amp;</line>
        <line t="X" i="103" b="0" n="0">                                   xml_writer_write_int1_terminal_string, &amp;</line>
        <line t="X" i="104" b="0" n="0">                                   xml_writer_write_int2_terminal_character, &amp;</line>
        <line t="X" i="105" b="0" n="0">                                   xml_writer_write_int2_terminal_string, &amp;</line>
        <line t="X" i="106" b="0" n="0">                                   xml_writer_write_integer_terminal_character, &amp;</line>
        <line t="X" i="107" b="0" n="0">                                   xml_writer_write_integer_terminal_string, &amp;</line>
        <line t="X" i="108" b="0" n="0">                                   xml_writer_write_int8_terminal_character, &amp;</line>
        <line t="X" i="109" b="0" n="0">                                   xml_writer_write_int8_terminal_string, &amp;</line>
        <line t="X" i="110" b="0" n="0">                                   xml_writer_write_real_terminal_character, &amp;</line>
        <line t="X" i="111" b="0" n="0">                                   xml_writer_write_real_terminal_string, &amp;</line>
        <line t="X" i="112" b="0" n="0">                                   xml_writer_write_double_terminal_character, &amp;</line>
        <line t="X" i="113" b="0" n="0">                                   xml_writer_write_double_terminal_string, &amp;</line>
        <line t="X" i="114" b="0" n="0">                                   xml_writer_write_complex_terminal_character, &amp;</line>
        <line t="X" i="115" b="0" n="0">                                   xml_writer_write_complex_terminal_string, &amp;</line>
        <line t="X" i="116" b="0" n="0">                                   xml_writer_write_double_complex_terminal_character, &amp;</line>
        <line t="X" i="117" b="0" n="0">                                   xml_writer_write_double_complex_terminal_string, &amp;</line>
        <line t="X" i="118" b="0" n="0">                                   xml_writer_write_logical1_terminal_character, &amp;</line>
        <line t="X" i="119" b="0" n="0">                                   xml_writer_write_logical1_terminal_string, &amp;</line>
        <line t="X" i="120" b="0" n="0">                                   xml_writer_write_logical2_terminal_character, &amp;</line>
        <line t="X" i="121" b="0" n="0">                                   xml_writer_write_logical2_terminal_string, &amp;</line>
        <line t="X" i="122" b="0" n="0">                                   xml_writer_write_logical_terminal_character, &amp;</line>
        <line t="X" i="123" b="0" n="0">                                   xml_writer_write_logical_terminal_string</line>
        <line t="X" i="124" b="0" n="0">      procedure, private :: xml_writer_write_empty_terminal_character</line>
        <line t="X" i="125" b="0" n="0">      procedure, private :: xml_writer_write_empty_terminal_string</line>
        <line t="X" i="126" b="0" n="0">      procedure, private :: xml_writer_write_character_terminal_character</line>
        <line t="X" i="127" b="0" n="0">      procedure, private :: xml_writer_write_character_terminal_string</line>
        <line t="X" i="128" b="0" n="0">      procedure, private :: xml_writer_write_string_terminal_character</line>
        <line t="X" i="129" b="0" n="0">      procedure, private :: xml_writer_write_string_terminal_string</line>
        <line t="X" i="130" b="0" n="0">      procedure, private :: xml_writer_write_int1_terminal_character</line>
        <line t="X" i="131" b="0" n="0">      procedure, private :: xml_writer_write_int1_terminal_string</line>
        <line t="X" i="132" b="0" n="0">      procedure, private :: xml_writer_write_int2_terminal_character</line>
        <line t="X" i="133" b="0" n="0">      procedure, private :: xml_writer_write_int2_terminal_string</line>
        <line t="X" i="134" b="0" n="0">      procedure, private :: xml_writer_write_integer_terminal_character</line>
        <line t="X" i="135" b="0" n="0">      procedure, private :: xml_writer_write_integer_terminal_string</line>
        <line t="X" i="136" b="0" n="0">      procedure, private :: xml_writer_write_int8_terminal_character</line>
        <line t="X" i="137" b="0" n="0">      procedure, private :: xml_writer_write_int8_terminal_string</line>
        <line t="X" i="138" b="0" n="0">      procedure, private :: xml_writer_write_real_terminal_character</line>
        <line t="X" i="139" b="0" n="0">      procedure, private :: xml_writer_write_real_terminal_string</line>
        <line t="X" i="140" b="0" n="0">      procedure, private :: xml_writer_write_double_terminal_character</line>
        <line t="X" i="141" b="0" n="0">      procedure, private :: xml_writer_write_double_terminal_string</line>
        <line t="X" i="142" b="0" n="0">      procedure, private :: xml_writer_write_complex_terminal_character</line>
        <line t="X" i="143" b="0" n="0">      procedure, private :: xml_writer_write_complex_terminal_string</line>
        <line t="X" i="144" b="0" n="0">      procedure, private :: xml_writer_write_double_complex_terminal_character</line>
        <line t="X" i="145" b="0" n="0">      procedure, private :: xml_writer_write_double_complex_terminal_string</line>
        <line t="X" i="146" b="0" n="0">      procedure, private :: xml_writer_write_logical1_terminal_character</line>
        <line t="X" i="147" b="0" n="0">      procedure, private :: xml_writer_write_logical1_terminal_string</line>
        <line t="X" i="148" b="0" n="0">      procedure, private :: xml_writer_write_logical2_terminal_character</line>
        <line t="X" i="149" b="0" n="0">      procedure, private :: xml_writer_write_logical2_terminal_string</line>
        <line t="X" i="150" b="0" n="0">      procedure, private :: xml_writer_write_logical_terminal_character</line>
        <line t="X" i="151" b="0" n="0">      procedure, private :: xml_writer_write_logical_terminal_string</line>
        <line t="X" i="152" b="0" n="0"></line>
        <line t="C" i="153" b="0" n="0">!     Interfaces for writing start tag</line>
        <line t="X" i="154" b="0" n="0">      generic :: write_start_tag =&gt; xml_writer_write_start_tag_character, &amp;</line>
        <line t="X" i="155" b="0" n="0">                                    xml_writer_write_start_tag_string</line>
        <line t="X" i="156" b="0" n="0">      procedure, private :: xml_writer_write_start_tag_character</line>
        <line t="X" i="157" b="0" n="0">      procedure, private :: xml_writer_write_start_tag_string</line>
        <line t="X" i="158" b="0" n="0"></line>
        <line t="C" i="159" b="0" n="0">!     Interfaces for writing end tag</line>
        <line t="X" i="160" b="0" n="0">      generic :: write_end_tag =&gt; xml_writer_write_end_tag_character, &amp;</line>
        <line t="X" i="161" b="0" n="0">                                  xml_writer_write_end_tag_string</line>
        <line t="X" i="162" b="0" n="0">      procedure, private :: xml_writer_write_end_tag_character</line>
        <line t="X" i="163" b="0" n="0">      procedure, private :: xml_writer_write_end_tag_string</line>
        <line t="X" i="164" b="0" n="0"></line>
        <line t="C" i="165" b="0" n="0">!     Serialize a list of attributes</line>
        <line t="X" i="166" b="0" n="0">      procedure, private :: xml_writer_attributes_to_string</line>
        <line t="X" i="167" b="0" n="0"></line>
        <line t="C" i="168" b="0" n="0">!     Write the XML first record with version number</line>
        <line t="X" i="169" b="0" n="0">      generic :: write_version =&gt; xml_writer_write_version_default, &amp;</line>
        <line t="X" i="170" b="0" n="0">                                  xml_writer_write_version_character, &amp;</line>
        <line t="X" i="171" b="0" n="0">                                  xml_writer_write_version_string</line>
        <line t="X" i="172" b="0" n="0">      procedure, private :: xml_writer_write_version_default</line>
        <line t="X" i="173" b="0" n="0">      procedure, private :: xml_writer_write_version_character</line>
        <line t="X" i="174" b="0" n="0">      procedure, private :: xml_writer_write_version_string</line>
        <line t="X" i="175" b="0" n="0"></line>
        <line t="C" i="176" b="0" n="0">!     Write the XML first record with version number</line>
        <line t="X" i="177" b="0" n="0">      generic :: write_stylesheet =&gt; xml_writer_write_stylesheet_character, &amp;</line>
        <line t="X" i="178" b="0" n="0">                                     xml_writer_write_stylesheet_string</line>
        <line t="X" i="179" b="0" n="0">      procedure, private :: xml_writer_write_stylesheet_character</line>
        <line t="X" i="180" b="0" n="0">      procedure, private :: xml_writer_write_stylesheet_string</line>
        <line t="X" i="181" b="0" n="0"></line>
        <line t="C" i="182" b="0" n="0">!     Write the XML root start tag</line>
        <line t="X" i="183" b="0" n="0">      generic :: write_root_start_tag =&gt; xml_writer_write_root_start_tag_character, &amp;</line>
        <line t="X" i="184" b="0" n="0">                                         xml_writer_write_root_start_tag_string</line>
        <line t="X" i="185" b="0" n="0">      procedure, private :: xml_writer_write_root_start_tag_character</line>
        <line t="X" i="186" b="0" n="0">      procedure, private :: xml_writer_write_root_start_tag_string</line>
        <line t="X" i="187" b="0" n="0"></line>
        <line t="C" i="188" b="0" n="0">!     Write the XML root end tag</line>
        <line t="X" i="189" b="0" n="0">      generic :: write_root_end_tag =&gt; xml_writer_write_root_end_tag_character, &amp;</line>
        <line t="X" i="190" b="0" n="0">                                       xml_writer_write_root_end_tag_string</line>
        <line t="X" i="191" b="0" n="0">      procedure, private :: xml_writer_write_root_end_tag_character</line>
        <line t="X" i="192" b="0" n="0">      procedure, private :: xml_writer_write_root_end_tag_string</line>
        <line t="X" i="193" b="0" n="0"></line>
        <line t="C" i="194" b="0" n="0">!     Write a terminal XML meta tag (enclosed in &lt;? ?&gt;)</line>
        <line t="X" i="195" b="0" n="0">      generic :: write_processing_instruction =&gt; xml_writer_write_processing_instruction_character, &amp;</line>
        <line t="X" i="196" b="0" n="0">                                                 xml_writer_write_processing_instruction_string</line>
        <line t="X" i="197" b="0" n="0">      procedure, private :: xml_writer_write_processing_instruction_character</line>
        <line t="X" i="198" b="0" n="0">      procedure, private :: xml_writer_write_processing_instruction_string</line>
        <line t="X" i="199" b="0" n="0"></line>
        <line t="C" i="200" b="0" n="0">!     Write a terminal XML comment (enclosed in &lt;!-- --&gt;)</line>
        <line t="X" i="201" b="0" n="0">      generic :: write_comment =&gt; xml_writer_write_comment_character, &amp;</line>
        <line t="X" i="202" b="0" n="0">                                  xml_writer_write_comment_string</line>
        <line t="X" i="203" b="0" n="0">      procedure, private :: xml_writer_write_comment_character</line>
        <line t="X" i="204" b="0" n="0">      procedure, private :: xml_writer_write_comment_string</line>
        <line t="X" i="205" b="0" n="0"></line>
        <line t="C" i="206" b="0" n="0">!     Increase the indentation level</line>
        <line t="X" i="207" b="0" n="0">      procedure, private :: indent_increase =&gt; xml_writer_indent_increase</line>
        <line t="X" i="208" b="0" n="0"></line>
        <line t="C" i="209" b="0" n="0">!     Decrease the indentation level</line>
        <line t="X" i="210" b="0" n="0">      procedure, private :: indent_decrease =&gt; xml_writer_indent_decrease</line>
        <line t="X" i="211" b="0" n="0"></line>
        <line t="C" i="212" b="0" n="0">!     Get/Set indent level</line>
        <line t="X" i="213" b="0" n="0">      procedure :: get_indent_level =&gt; xml_writer_get_indent_level</line>
        <line t="X" i="214" b="0" n="0">      procedure :: set_indent_level =&gt; xml_writer_set_indent_level</line>
        <line t="X" i="215" b="0" n="0">      </line>
        <line t="T" i="216" b="0" n="0">  end type t_xml_writer</line>
        <line t="T" i="217" b="0" n="0"></line>
        <line t="C" i="218" b="0" n="0">! Constructor interface</line>
        <line t="X" i="219" b="0" n="0">  interface xml_writer</line>
        <line t="X" i="220" b="0" n="0">    module procedure xml_writer_default</line>
        <line t="X" i="221" b="0" n="0">    module procedure xml_writer_unit</line>
        <line t="X" i="222" b="0" n="0">    module procedure xml_writer_fhandler</line>
        <line t="X" i="223" b="0" n="0">  end interface xml_writer</line>
        <line t="X" i="224" b="0" n="0"></line>
        <line t="C" i="225" b="0" n="0">!- End of module variable declarations ----------------------------------------</line>
        <line t="C" i="226" b="0" n="0"></line>
        <line t="X" i="227" b="0" n="0">contains</line>
        <line t="X" i="228" b="0" n="0"></line>
        <line t="C" i="229" b="0" n="0">! Constructor from fortran unit</line>
        <line k="xml_writer_default" t="F" i="230" b="1" n="1">elemental function xml_writer_default() result(res)</line>
        <line t="F" i="231" b="1" n="1"></line>
        <line t="C" i="232" b="1" n="1">! The XML document parsing structure</line>
        <line t="X" i="233" b="1" n="1">  type(t_xml_writer) :: res</line>
        <line t="X" i="234" b="1" n="1"></line>
        <line t="C" i="235" b="1" n="1">! Set the default indentation chars (from settings)</line>
        <line t="X" i="236" b="1" n="1">  res%indent = .false.</line>
        <line t="X" i="237" b="1" n="1">  res%indent_chars = ''</line>
        <line t="X" i="238" b="1" n="1"></line>
        <line t="C" i="239" b="1" n="1">! Initialise identation counter</line>
        <line t="X" i="240" b="1" n="1">  res%indent_level = 0</line>
        <line t="X" i="241" b="1" n="1"></line>
        <line t="EF" i="242" b="1" n="1">end function xml_writer_default</line>
        <line t="EF" i="243" b="1" n="1"></line>
        <line t="EF" i="244" b="1" n="1"></line>
        <line t="C" i="245" b="1" n="1">! Constructor from fortran unit</line>
        <line k="xml_writer_unit" t="F" i="246" b="1" n="1">elemental function xml_writer_unit( unit, settings ) result(res)</line>
        <line t="F" i="247" b="1" n="1"></line>
        <line t="C" i="248" b="1" n="1">! The open fortran unit to read from</line>
        <line t="X" i="249" b="1" n="1">  integer, intent(in) :: unit</line>
        <line t="X" i="250" b="1" n="1"></line>
        <line t="C" i="251" b="1" n="1">! The XML serialization settings</line>
        <line t="X" i="252" b="1" n="1">  type(t_xml_writer_settings), optional, intent(in) :: settings</line>
        <line t="X" i="253" b="1" n="1"></line>
        <line t="C" i="254" b="1" n="1">! The XML document parsing structure</line>
        <line t="X" i="255" b="1" n="1">  type(t_xml_writer) :: res</line>
        <line t="X" i="256" b="1" n="1"></line>
        <line t="C" i="257" b="1" n="1">! Set the default values</line>
        <line t="X" i="258" b="1" n="1">  res%indent_level = 0</line>
        <line t="X" i="259" b="1" n="1"></line>
        <line t="C" i="260" b="1" n="1">! Initialise the Fortran unit</line>
        <line t="X" i="261" b="1" n="1">  res%unit = unit</line>
        <line t="X" i="262" b="1" n="1"></line>
        <line t="C" i="263" b="1" n="1">! Store settings</line>
        <line t="X" i="264" b="2" n="2">  if( present(settings) ) then</line>
        <line t="X" i="265" b="2" n="2">    res%settings = settings</line>
        <line t="X" i="266" b="3" n="2">  else</line>
        <line t="X" i="267" b="3" n="2">    res%settings = xml_writer_settings()</line>
        <line t="X" i="268" b="3" n="1">  end if</line>
        <line t="X" i="269" b="3" n="1"></line>
        <line t="C" i="270" b="3" n="1">! Initialise the encoder</line>
        <line t="X" i="271" b="3" n="1">  res%encoder = xml_encoder( res%settings%get_xml_encoding() )</line>
        <line t="X" i="272" b="3" n="1"></line>
        <line t="C" i="273" b="3" n="1">! Initialise indentation variables</line>
        <line t="X" i="274" b="3" n="1">  res%lines = res%settings%get_lines()</line>
        <line t="X" i="275" b="3" n="1">  res%indent = res%settings%get_indent()</line>
        <line t="X" i="276" b="3" n="1">  res%indent_chars = ''</line>
        <line t="X" i="277" b="3" n="1"></line>
        <line t="C" i="278" b="3" n="1">! Initialise line advance</line>
        <line t="X" i="279" b="4" n="2">  if( res%settings%get_lines() ) then</line>
        <line t="X" i="280" b="4" n="2">    res%advance = 'yes'</line>
        <line t="X" i="281" b="5" n="2">  else</line>
        <line t="X" i="282" b="5" n="2">    res%advance = 'no'</line>
        <line t="X" i="283" b="5" n="1">  end if</line>
        <line t="X" i="284" b="5" n="1"></line>
        <line t="C" i="285" b="5" n="1">! Initialise identation counter</line>
        <line t="X" i="286" b="5" n="1">  res%indent_level = 0</line>
        <line t="X" i="287" b="5" n="1"></line>
        <line t="EF" i="288" b="5" n="1">end function xml_writer_unit</line>
        <line t="EF" i="289" b="1" n="1"></line>
        <line t="EF" i="290" b="1" n="1"></line>
        <line t="C" i="291" b="1" n="1">! Constructor from file handler</line>
        <line k="xml_writer_fhandler" t="F" i="292" b="1" n="1">elemental function xml_writer_fhandler( fhandler, settings ) result(res)</line>
        <line t="F" i="293" b="1" n="1"></line>
        <line t="C" i="294" b="1" n="1">! The file handler</line>
        <line t="X" i="295" b="1" n="1">  type(t_file_handler), intent(in) :: fhandler</line>
        <line t="X" i="296" b="1" n="1"></line>
        <line t="C" i="297" b="1" n="1">! The XML serialization settings</line>
        <line t="X" i="298" b="1" n="1">  type(t_xml_writer_settings), optional, intent(in) :: settings</line>
        <line t="X" i="299" b="1" n="1"></line>
        <line t="C" i="300" b="1" n="1">! The XML document parsing structure</line>
        <line t="X" i="301" b="1" n="1">  type(t_xml_writer) :: res</line>
        <line t="X" i="302" b="1" n="1"></line>
        <line t="C" i="303" b="1" n="1">! Invoke the interface with the fortran unit</line>
        <line t="X" i="304" b="1" n="1">  res = xml_writer( fhandler%get_unit(), settings )</line>
        <line t="X" i="305" b="1" n="1"></line>
        <line t="EF" i="306" b="1" n="1">end function xml_writer_fhandler</line>
        <line t="EF" i="307" b="1" n="1"></line>
        <line t="EF" i="308" b="1" n="1"></line>
        <line t="C" i="309" b="1" n="1">! Convert attributes to attributes list</line>
        <line k="xml_writer_attributes_to_string" t="F" i="310" b="1" n="1">pure function xml_writer_attributes_to_string( this, attr ) result(res)</line>
        <line t="F" i="311" b="1" n="1"></line>
        <line t="C" i="312" b="1" n="1">! The XML context structure</line>
        <line t="X" i="313" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="314" b="1" n="1"></line>
        <line t="C" i="315" b="1" n="1">! List of attributes</line>
        <line t="X" i="316" b="1" n="1">  type(t_xml_attribute), dimension(:), intent(in) :: attr</line>
        <line t="X" i="317" b="1" n="1"></line>
        <line t="C" i="318" b="1" n="1">! The serialized attributes</line>
        <line t="X" i="319" b="1" n="1">  character(len=:), allocatable :: res</line>
        <line t="X" i="320" b="1" n="1"></line>
        <line t="C" i="321" b="1" n="1">! Local variables</line>
        <line t="X" i="322" b="1" n="1">  integer :: i</line>
        <line t="X" i="323" b="1" n="1">  character(len=:), allocatable :: attrstr</line>
        <line t="X" i="324" b="1" n="1"></line>
        <line t="C" i="325" b="1" n="1">! Initialise</line>
        <line t="X" i="326" b="1" n="1">  res = attr(1)%to_string(this%encoder)</line>
        <line t="X" i="327" b="1" n="1"></line>
        <line t="C" i="328" b="1" n="1">! Process attributes</line>
        <line t="X" i="329" b="2" n="2">  do i = 2, size(attr)</line>
        <line t="X" i="330" b="2" n="2"></line>
        <line t="C" i="331" b="2" n="2">!   Add attribute</line>
        <line t="X" i="332" b="2" n="2">    attrstr = attr(i)%to_string(this%encoder)</line>
        <line t="X" i="333" b="2" n="2">    res = res//' '//trim(attrstr)</line>
        <line t="X" i="334" b="2" n="2"></line>
        <line t="X" i="335" b="2" n="1">  end do</line>
        <line t="X" i="336" b="2" n="1"></line>
        <line t="EF" i="337" b="2" n="1">end function xml_writer_attributes_to_string</line>
        <line t="EF" i="338" b="1" n="1"></line>
        <line t="EF" i="339" b="1" n="1"></line>
        <line t="C" i="340" b="1" n="1">! Write the XML first record with version number</line>
        <line k="xml_writer_write_version_default" t="S" i="341" b="1" n="1">subroutine xml_writer_write_version_default( this )</line>
        <line t="S" i="342" b="1" n="1"></line>
        <line t="C" i="343" b="1" n="1">! The XML context structure</line>
        <line t="X" i="344" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="345" b="1" n="1"></line>
        <line t="C" i="346" b="1" n="1">! Local variables</line>
        <line t="X" i="347" b="1" n="1">  type(t_xml_attribute), dimension(2) :: attr</line>
        <line t="X" i="348" b="1" n="1"></line>
        <line t="C" i="349" b="1" n="1">! Check if the declaration is to be output</line>
        <line t="X" i="350" b="2" n="2">  if( .not. this%settings%get_omit_xml_declaration() ) then</line>
        <line t="X" i="351" b="2" n="2"></line>
        <line t="C" i="352" b="2" n="2">!   Select the version</line>
        <line t="X" i="353" b="2" n="2">    attr(1) = xml_attribute( 'version', '1.0' )</line>
        <line t="X" i="354" b="2" n="2"></line>
        <line t="C" i="355" b="2" n="2">!   Write the XML version record</line>
        <line t="X" i="356" b="2" n="2">    call this%write_processing_instruction( 'xml', attr=attr )</line>
        <line t="X" i="357" b="2" n="2"></line>
        <line t="X" i="358" b="2" n="1">  end if</line>
        <line t="X" i="359" b="2" n="1"></line>
        <line t="ES" i="360" b="2" n="1">end subroutine xml_writer_write_version_default</line>
        <line t="ES" i="361" b="1" n="1"></line>
        <line t="ES" i="362" b="1" n="1"></line>
        <line t="C" i="363" b="1" n="1">! Write the XML first record with version number</line>
        <line k="xml_writer_write_version_character" t="S" i="364" b="1" n="1">subroutine xml_writer_write_version_character( this, version, encoding )</line>
        <line t="S" i="365" b="1" n="1"></line>
        <line t="C" i="366" b="1" n="1">! The XML context structure</line>
        <line t="X" i="367" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="368" b="1" n="1"></line>
        <line t="C" i="369" b="1" n="1">! The XML version as character string (default to 1.0)</line>
        <line t="X" i="370" b="1" n="1">  character(len=*), intent(in) :: version</line>
        <line t="X" i="371" b="1" n="1"></line>
        <line t="C" i="372" b="1" n="1">! The XML encoding (default to ISO-8859-1)</line>
        <line t="X" i="373" b="1" n="1">  character(len=*), intent(in) :: encoding</line>
        <line t="X" i="374" b="1" n="1"></line>
        <line t="C" i="375" b="1" n="1">! Local variables</line>
        <line t="X" i="376" b="1" n="1">  type(t_xml_attribute), dimension(2) :: attr</line>
        <line t="X" i="377" b="1" n="1"></line>
        <line t="C" i="378" b="1" n="1">! Check if the declaration is to be output</line>
        <line t="X" i="379" b="2" n="2">  if( .not. this%settings%get_omit_xml_declaration() ) then</line>
        <line t="X" i="380" b="2" n="2"></line>
        <line t="C" i="381" b="2" n="2">!   Select the version</line>
        <line t="X" i="382" b="2" n="2">    attr(1) = xml_attribute( 'version', version )</line>
        <line t="X" i="383" b="2" n="2"></line>
        <line t="C" i="384" b="2" n="2">!   Select the encoding</line>
        <line t="X" i="385" b="2" n="2">    attr(2) = xml_attribute( 'encoding', encoding )</line>
        <line t="X" i="386" b="2" n="2"></line>
        <line t="C" i="387" b="2" n="2">!   Write the XML version record</line>
        <line t="X" i="388" b="2" n="2">    call this%write_processing_instruction( 'xml', attr=attr )</line>
        <line t="X" i="389" b="2" n="2"></line>
        <line t="X" i="390" b="2" n="1">  end if</line>
        <line t="X" i="391" b="2" n="1"></line>
        <line t="ES" i="392" b="2" n="1">end subroutine xml_writer_write_version_character</line>
        <line t="ES" i="393" b="1" n="1"></line>
        <line t="ES" i="394" b="1" n="1"></line>
        <line t="C" i="395" b="1" n="1">! Write the XML first record with version number</line>
        <line k="xml_writer_write_version_string" t="S" i="396" b="1" n="1">subroutine xml_writer_write_version_string( this, version, encoding )</line>
        <line t="S" i="397" b="1" n="1"></line>
        <line t="C" i="398" b="1" n="1">! The XML context structure</line>
        <line t="X" i="399" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="400" b="1" n="1"></line>
        <line t="C" i="401" b="1" n="1">! The XML version as character string (default to 1.0)</line>
        <line t="X" i="402" b="1" n="1">  type(t_string), intent(in) :: version</line>
        <line t="X" i="403" b="1" n="1"></line>
        <line t="C" i="404" b="1" n="1">! The XML encoding (default to ISO-8859-1)</line>
        <line t="X" i="405" b="1" n="1">  type(t_string), intent(in) :: encoding</line>
        <line t="X" i="406" b="1" n="1"></line>
        <line t="C" i="407" b="1" n="1">! Call the character interface</line>
        <line t="X" i="408" b="1" n="1">  call this%write_version( version%character(), encoding%character() )</line>
        <line t="X" i="409" b="1" n="1"></line>
        <line t="ES" i="410" b="1" n="1">end subroutine xml_writer_write_version_string</line>
        <line t="ES" i="411" b="1" n="1"></line>
        <line t="ES" i="412" b="1" n="1"></line>
        <line t="C" i="413" b="1" n="1">! Write the XML first record with version number</line>
        <line k="xml_writer_write_stylesheet_character" t="S" i="414" b="1" n="1">subroutine xml_writer_write_stylesheet_character( this, xsl )</line>
        <line t="S" i="415" b="1" n="1"></line>
        <line t="C" i="416" b="1" n="1">! The XML context structure</line>
        <line t="X" i="417" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="418" b="1" n="1"></line>
        <line t="C" i="419" b="1" n="1">! Stylesheet name as character string</line>
        <line t="X" i="420" b="1" n="1">  character(len=*), intent(in) :: xsl</line>
        <line t="X" i="421" b="1" n="1"></line>
        <line t="C" i="422" b="1" n="1">! Local variables</line>
        <line t="X" i="423" b="1" n="1">  type(t_xml_attribute), dimension(2) :: attr</line>
        <line t="X" i="424" b="1" n="1"></line>
        <line t="C" i="425" b="1" n="1">! Select the stylesheet type</line>
        <line t="X" i="426" b="1" n="1">  attr(1) = xml_attribute( 'type', 'text/xsl' )</line>
        <line t="X" i="427" b="1" n="1"></line>
        <line t="C" i="428" b="1" n="1">! Select the stylesheet URL</line>
        <line t="X" i="429" b="1" n="1">  attr(2) = xml_attribute( 'href', trim(xsl) )</line>
        <line t="X" i="430" b="1" n="1"></line>
        <line t="C" i="431" b="1" n="1">! Write the XML version record</line>
        <line t="X" i="432" b="1" n="1">  call this%write_processing_instruction( 'xml-stylesheet', attr=attr )</line>
        <line t="X" i="433" b="1" n="1"></line>
        <line t="ES" i="434" b="1" n="1">end subroutine xml_writer_write_stylesheet_character</line>
        <line t="ES" i="435" b="1" n="1"></line>
        <line t="ES" i="436" b="1" n="1"></line>
        <line t="C" i="437" b="1" n="1">! Write the XML first record with version number</line>
        <line k="xml_writer_write_stylesheet_string" t="S" i="438" b="1" n="1">subroutine xml_writer_write_stylesheet_string( this, xsl )</line>
        <line t="S" i="439" b="1" n="1"></line>
        <line t="C" i="440" b="1" n="1">! The XML context structure</line>
        <line t="X" i="441" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="442" b="1" n="1"></line>
        <line t="C" i="443" b="1" n="1">! Stylesheet name as character string</line>
        <line t="X" i="444" b="1" n="1">  type(t_string), intent(in) :: xsl</line>
        <line t="X" i="445" b="1" n="1"></line>
        <line t="C" i="446" b="1" n="1">! Call the character interface</line>
        <line t="X" i="447" b="1" n="1">  call this%write_stylesheet( xsl%character() )</line>
        <line t="X" i="448" b="1" n="1"></line>
        <line t="ES" i="449" b="1" n="1">end subroutine xml_writer_write_stylesheet_string</line>
        <line t="ES" i="450" b="1" n="1"></line>
        <line t="ES" i="451" b="1" n="1"></line>
        <line t="C" i="452" b="1" n="1">! Write the XML root element</line>
        <line k="xml_writer_write_root_start_tag_character" t="S" i="453" b="1" n="1">subroutine xml_writer_write_root_start_tag_character( this, tag, xmlns, schema, attr )</line>
        <line t="S" i="454" b="1" n="1"></line>
        <line t="C" i="455" b="1" n="1">! The XML context structure</line>
        <line t="X" i="456" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="457" b="1" n="1"></line>
        <line t="C" i="458" b="1" n="1">! XML root tag</line>
        <line t="X" i="459" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="460" b="1" n="1"></line>
        <line t="C" i="461" b="1" n="1">! XML namespace</line>
        <line t="X" i="462" b="1" n="1">  character(len=*), optional, intent(in) :: xmlns</line>
        <line t="X" i="463" b="1" n="1"></line>
        <line t="C" i="464" b="1" n="1">! XML schema</line>
        <line t="X" i="465" b="1" n="1">  character(len=*), optional, intent(in) :: schema</line>
        <line t="X" i="466" b="1" n="1"></line>
        <line t="C" i="467" b="1" n="1">! Other attributes</line>
        <line t="X" i="468" b="1" n="1">  type(t_xml_attribute), optional, dimension(:) :: attr</line>
        <line t="X" i="469" b="1" n="1"></line>
        <line t="C" i="470" b="1" n="1">! Local variables</line>
        <line t="X" i="471" b="1" n="1">  integer idx</line>
        <line t="X" i="472" b="1" n="1">  type(t_xml_attribute), dimension(:), allocatable :: local_attr</line>
        <line t="X" i="473" b="1" n="1"></line>
        <line t="C" i="474" b="1" n="1">! intel-bug</line>
        <line t="C" i="475" b="1" n="1">! gfortran-bug</line>
        <line t="C" i="476" b="1" n="1">! There are some funnies with compilers.</line>
        <line t="C" i="477" b="1" n="1">! These two variables are needed to store locally the input information</line>
        <line t="C" i="478" b="1" n="1">! before passing it to the XML attribute assginment routines.</line>
        <line t="C" i="479" b="1" n="1">! Hopefully this will disappear in the future but for the moment ...</line>
        <line t="X" i="480" b="1" n="1">  type(t_xml_attribute) :: a</line>
        <line t="X" i="481" b="1" n="1">  character(len=128) :: c</line>
        <line t="X" i="482" b="1" n="1"></line>
        <line t="C" i="483" b="1" n="1">! Initialise the local attribute array</line>
        <line t="X" i="484" b="2" n="2">  if( present(attr) ) then</line>
        <line t="X" i="485" b="2" n="2">    idx = size(attr)</line>
        <line t="X" i="486" b="2" n="2">    allocate(local_attr(idx+2))</line>
        <line t="X" i="487" b="2" n="2">    local_attr(:idx) = attr</line>
        <line t="X" i="488" b="3" n="2">  else</line>
        <line t="X" i="489" b="3" n="2">    idx = 0</line>
        <line t="X" i="490" b="3" n="2">    allocate(local_attr(3))</line>
        <line t="X" i="491" b="3" n="1">  end if</line>
        <line t="X" i="492" b="3" n="1"></line>
        <line t="C" i="493" b="3" n="1">! Check XML namespace presence</line>
        <line t="X" i="494" b="3" n="1">  call a%set_name( 'xmlns:xsi' )</line>
        <line t="X" i="495" b="4" n="2">  if( present(xmlns) ) then</line>
        <line t="X" i="496" b="4" n="2">    c = xmlns</line>
        <line t="X" i="497" b="4" n="2">    call a%set_value( c )</line>
        <line t="X" i="498" b="5" n="2">  else</line>
        <line t="X" i="499" b="5" n="2">    call a%set_value( 'http://www.w3.org/2001/XMLSchema-instance' )</line>
        <line t="X" i="500" b="5" n="1">  end if</line>
        <line t="X" i="501" b="5" n="1">  local_attr(idx+1) = a</line>
        <line t="X" i="502" b="5" n="1"></line>
        <line t="C" i="503" b="5" n="1">! Check for XML schema presence</line>
        <line t="X" i="504" b="6" n="2">  if( present(schema) ) then</line>
        <line t="X" i="505" b="6" n="2">    c = schema</line>
        <line t="X" i="506" b="6" n="2">    call a%set_name( 'xsi:noNamespaceSchemaLocation' )</line>
        <line t="X" i="507" b="6" n="2">    call a%set_value( c )</line>
        <line t="X" i="508" b="6" n="2">    local_attr(idx+2) = a</line>
        <line t="X" i="509" b="7" n="2">  else</line>
        <line t="X" i="510" b="7" n="2">    local_attr(idx+2) = xml_attribute( '', '' )</line>
        <line t="X" i="511" b="7" n="1">  end if</line>
        <line t="X" i="512" b="7" n="1"></line>
        <line t="C" i="513" b="7" n="1">! Write the tag</line>
        <line t="X" i="514" b="7" n="1">  call this%write_start_tag( tag, local_attr )</line>
        <line t="X" i="515" b="7" n="1"></line>
        <line t="ES" i="516" b="7" n="1">end subroutine xml_writer_write_root_start_tag_character</line>
        <line t="ES" i="517" b="1" n="1"></line>
        <line t="ES" i="518" b="1" n="1"></line>
        <line t="C" i="519" b="1" n="1">! Write the XML root element</line>
        <line k="xml_writer_write_root_start_tag_string" t="S" i="520" b="1" n="1">subroutine xml_writer_write_root_start_tag_string( this, tag, xmlns, schema, attr )</line>
        <line t="S" i="521" b="1" n="1"></line>
        <line t="C" i="522" b="1" n="1">! The XML context structure</line>
        <line t="X" i="523" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="524" b="1" n="1"></line>
        <line t="C" i="525" b="1" n="1">! XML root tag</line>
        <line t="X" i="526" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="527" b="1" n="1"></line>
        <line t="C" i="528" b="1" n="1">! XML namespace</line>
        <line t="X" i="529" b="1" n="1">  type(t_string), optional, intent(in) :: xmlns</line>
        <line t="X" i="530" b="1" n="1"></line>
        <line t="C" i="531" b="1" n="1">! XML schema</line>
        <line t="X" i="532" b="1" n="1">  type(t_string), optional, intent(in) :: schema</line>
        <line t="X" i="533" b="1" n="1"></line>
        <line t="C" i="534" b="1" n="1">! Other attributes</line>
        <line t="X" i="535" b="1" n="1">  type(t_xml_attribute), optional, dimension(:) :: attr</line>
        <line t="X" i="536" b="1" n="1"></line>
        <line t="C" i="537" b="1" n="1">! Call the character interface</line>
        <line t="X" i="538" b="1" n="1">  call this%write_root_start_tag( tag%character(), xmlns%character(), schema%character(), attr )</line>
        <line t="X" i="539" b="1" n="1"></line>
        <line t="ES" i="540" b="1" n="1">end subroutine xml_writer_write_root_start_tag_string</line>
        <line t="ES" i="541" b="1" n="1"></line>
        <line t="ES" i="542" b="1" n="1"></line>
        <line t="C" i="543" b="1" n="1">! Write the XML root element</line>
        <line k="xml_writer_write_root_end_tag_character" t="S" i="544" b="1" n="1">subroutine xml_writer_write_root_end_tag_character( this, tag )</line>
        <line t="S" i="545" b="1" n="1"></line>
        <line t="C" i="546" b="1" n="1">! The XML context structure</line>
        <line t="X" i="547" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="548" b="1" n="1"></line>
        <line t="C" i="549" b="1" n="1">! XML root tag</line>
        <line t="X" i="550" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="551" b="1" n="1"></line>
        <line t="C" i="552" b="1" n="1">! Write the end tag</line>
        <line t="X" i="553" b="1" n="1">  call this%write_end_tag( tag )</line>
        <line t="X" i="554" b="1" n="1"></line>
        <line t="C" i="555" b="1" n="1">! Check if the lie end terminator must be added.</line>
        <line t="C" i="556" b="1" n="1">! Fortran requires at least one line control to flush the buffer</line>
        <line t="X" i="557" b="2" n="2">  if( this%advance == 'no' ) then</line>
        <line t="X" i="558" b="2" n="2">    write( this%unit, '(a)' ) ''</line>
        <line t="X" i="559" b="2" n="1">  end if</line>
        <line t="X" i="560" b="2" n="1"></line>
        <line t="ES" i="561" b="2" n="1">end subroutine xml_writer_write_root_end_tag_character</line>
        <line t="ES" i="562" b="1" n="1"></line>
        <line t="ES" i="563" b="1" n="1"></line>
        <line t="C" i="564" b="1" n="1">! Write the XML root element</line>
        <line k="xml_writer_write_root_end_tag_string" t="S" i="565" b="1" n="1">subroutine xml_writer_write_root_end_tag_string( this, tag )</line>
        <line t="S" i="566" b="1" n="1"></line>
        <line t="C" i="567" b="1" n="1">! The XML context structure</line>
        <line t="X" i="568" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="569" b="1" n="1"></line>
        <line t="C" i="570" b="1" n="1">! XML root tag</line>
        <line t="X" i="571" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="572" b="1" n="1"></line>
        <line t="C" i="573" b="1" n="1">! Write the end tag</line>
        <line t="X" i="574" b="1" n="1">  call this%write_root_end_tag( tag%character() )</line>
        <line t="X" i="575" b="1" n="1"></line>
        <line t="ES" i="576" b="1" n="1">end subroutine xml_writer_write_root_end_tag_string</line>
        <line t="ES" i="577" b="1" n="1"></line>
        <line t="ES" i="578" b="1" n="1"></line>
        <line t="C" i="579" b="1" n="1">! Write a terminal XML meta tag (enclosed in &lt;? ?&gt;)</line>
        <line k="xml_writer_write_processing_instruction_character" t="S" i="580" b="1" n="1">subroutine xml_writer_write_processing_instruction_character( this, tag, attr )</line>
        <line t="S" i="581" b="1" n="1"></line>
        <line t="C" i="582" b="1" n="1">! The XML context structure</line>
        <line t="X" i="583" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="584" b="1" n="1"></line>
        <line t="C" i="585" b="1" n="1">! The XML tag</line>
        <line t="X" i="586" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="587" b="1" n="1"></line>
        <line t="C" i="588" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="589" b="1" n="1">  type(t_xml_attribute), dimension(:), intent(in) :: attr</line>
        <line t="X" i="590" b="1" n="1"></line>
        <line t="C" i="591" b="1" n="1">! Local variables</line>
        <line t="X" i="592" b="1" n="1">  integer :: i</line>
        <line t="X" i="593" b="1" n="1">  type(t_string) :: local</line>
        <line t="X" i="594" b="1" n="1"></line>
        <line t="C" i="595" b="1" n="1">! Initialise the tag</line>
        <line t="X" i="596" b="1" n="1">  write( this%unit, '(a,a)', advance='no' ) '&lt;?', trim(adjustl(tag))</line>
        <line t="X" i="597" b="1" n="1"></line>
        <line t="C" i="598" b="1" n="1">! Write with attributes</line>
        <line t="X" i="599" b="2" n="2">  do i = lbound(attr,1), ubound(attr,1)</line>
        <line t="X" i="600" b="2" n="2"></line>
        <line t="C" i="601" b="2" n="2">!   Process attributes that have a name</line>
        <line t="X" i="602" b="3" n="3">    if( attr(i)%get_name() /= '' ) then</line>
        <line t="X" i="603" b="3" n="3"></line>
        <line t="C" i="604" b="3" n="3">!     Write the attribute</line>
        <line t="X" i="605" b="3" n="3">      local = attr(i)%to_string(this%encoder)</line>
        <line t="X" i="606" b="3" n="3">      write( this%unit, '(1x,a)', advance='no' ) local%character()</line>
        <line t="X" i="607" b="3" n="3"></line>
        <line t="X" i="608" b="3" n="2">    end if</line>
        <line t="X" i="609" b="3" n="2"></line>
        <line t="X" i="610" b="3" n="1">  end do</line>
        <line t="X" i="611" b="3" n="1"></line>
        <line t="C" i="612" b="3" n="1">! Complete the tag</line>
        <line t="X" i="613" b="3" n="1">  write( this%unit, '(a)', advance=this%advance ) '?&gt;'</line>
        <line t="X" i="614" b="3" n="1"></line>
        <line t="ES" i="615" b="3" n="1">end subroutine xml_writer_write_processing_instruction_character</line>
        <line t="ES" i="616" b="1" n="1"></line>
        <line t="ES" i="617" b="1" n="1"></line>
        <line t="C" i="618" b="1" n="1">! Write a terminal XML meta tag (enclosed in &lt;? ?&gt;)</line>
        <line k="xml_writer_write_processing_instruction_string" t="S" i="619" b="1" n="1">subroutine xml_writer_write_processing_instruction_string( this, tag, attr )</line>
        <line t="S" i="620" b="1" n="1"></line>
        <line t="C" i="621" b="1" n="1">! The XML context structure</line>
        <line t="X" i="622" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="623" b="1" n="1"></line>
        <line t="C" i="624" b="1" n="1">! The XML tag</line>
        <line t="X" i="625" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="626" b="1" n="1"></line>
        <line t="C" i="627" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="628" b="1" n="1">  type(t_xml_attribute), dimension(:), intent(in) :: attr</line>
        <line t="X" i="629" b="1" n="1"></line>
        <line t="C" i="630" b="1" n="1">! Call the character interface</line>
        <line t="X" i="631" b="1" n="1">  call this%write_processing_instruction( tag%character(), attr )</line>
        <line t="X" i="632" b="1" n="1"></line>
        <line t="ES" i="633" b="1" n="1">end subroutine xml_writer_write_processing_instruction_string</line>
        <line t="ES" i="634" b="1" n="1"></line>
        <line t="ES" i="635" b="1" n="1"></line>
        <line t="C" i="636" b="1" n="1">! Write a terminal XML comment (enclosed in &lt;!-- --&gt;)</line>
        <line k="xml_writer_write_comment_character" t="S" i="637" b="1" n="1">subroutine xml_writer_write_comment_character( this, text )</line>
        <line t="S" i="638" b="1" n="1"></line>
        <line t="C" i="639" b="1" n="1">! The XML context structure</line>
        <line t="X" i="640" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="641" b="1" n="1"></line>
        <line t="C" i="642" b="1" n="1">! The comment text</line>
        <line t="X" i="643" b="1" n="1">  character(len=*), intent(in) :: text</line>
        <line t="X" i="644" b="1" n="1"></line>
        <line t="C" i="645" b="1" n="1">! Write the indentation and stay in the line</line>
        <line t="X" i="646" b="2" n="2">  if( this%indent .and. this%lines ) then</line>
        <line t="X" i="647" b="2" n="2">    write( this%unit, '(a)', advance='no' ) this%indent_chars</line>
        <line t="X" i="648" b="2" n="1">  end if</line>
        <line t="X" i="649" b="2" n="1"></line>
        <line t="C" i="650" b="2" n="1">! Write the comment</line>
        <line t="X" i="651" b="2" n="1">  write( this%unit,'(a,1x,a,1x,a)', advance=this%advance ) '&lt;!--', trim(adjustl(text)), '--&gt;'</line>
        <line t="X" i="652" b="2" n="1"></line>
        <line t="ES" i="653" b="2" n="1">end subroutine xml_writer_write_comment_character</line>
        <line t="ES" i="654" b="1" n="1"></line>
        <line t="ES" i="655" b="1" n="1"></line>
        <line t="C" i="656" b="1" n="1">! Write a terminal XML comment (enclosed in &lt;!-- --&gt;)</line>
        <line k="xml_writer_write_comment_string" t="S" i="657" b="1" n="1">subroutine xml_writer_write_comment_string( this, text )</line>
        <line t="S" i="658" b="1" n="1"></line>
        <line t="C" i="659" b="1" n="1">! The XML context structure</line>
        <line t="X" i="660" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="661" b="1" n="1"></line>
        <line t="C" i="662" b="1" n="1">! The comment text</line>
        <line t="X" i="663" b="1" n="1">  type(t_string), intent(in) :: text</line>
        <line t="X" i="664" b="1" n="1"></line>
        <line t="C" i="665" b="1" n="1">! Invoke the character interfacce</line>
        <line t="X" i="666" b="1" n="1">  call this%write_comment( text%character() )</line>
        <line t="X" i="667" b="1" n="1"></line>
        <line t="ES" i="668" b="1" n="1">end subroutine xml_writer_write_comment_string</line>
        <line t="ES" i="669" b="1" n="1"></line>
        <line t="ES" i="670" b="1" n="1"></line>
        <line t="C" i="671" b="1" n="1">! Write a terminal XML tag with empty contents (character tag)</line>
        <line k="xml_writer_write_empty_terminal_character" t="S" i="672" b="1" n="1">subroutine xml_writer_write_empty_terminal_character( this, tag, attr )</line>
        <line t="S" i="673" b="1" n="1"></line>
        <line t="C" i="674" b="1" n="1">! The XML context structure</line>
        <line t="X" i="675" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="676" b="1" n="1"></line>
        <line t="C" i="677" b="1" n="1">! The XML tag</line>
        <line t="X" i="678" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="679" b="1" n="1"></line>
        <line t="C" i="680" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="681" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="682" b="1" n="1"></line>
        <line t="C" i="683" b="1" n="1">! Write the indentation and stay in the line</line>
        <line t="X" i="684" b="2" n="2">  if( this%indent .and. this%lines ) then</line>
        <line t="X" i="685" b="2" n="2">    write( this%unit, '(a)', advance='no' ) this%indent_chars</line>
        <line t="X" i="686" b="2" n="1">  end if</line>
        <line t="X" i="687" b="2" n="1"></line>
        <line t="C" i="688" b="2" n="1">! Write empty element</line>
        <line t="X" i="689" b="3" n="2">  if( present(attr) ) then</line>
        <line t="X" i="690" b="3" n="2">    write( this%unit, '(a,a,a,a,a)', advance=this%advance ) '&lt;', trim(tag), ' ', &amp;</line>
        <line t="X" i="691" b="3" n="2">                                                            this%xml_writer_attributes_to_string(attr), ' /&gt;'</line>
        <line t="X" i="692" b="4" n="2">  else</line>
        <line t="X" i="693" b="4" n="2">    write( this%unit, '(a,a,a)', advance=this%advance ) '&lt;', trim(tag), ' /&gt;'</line>
        <line t="X" i="694" b="4" n="1">  end if</line>
        <line t="X" i="695" b="4" n="1"></line>
        <line t="ES" i="696" b="4" n="1">end subroutine xml_writer_write_empty_terminal_character</line>
        <line t="ES" i="697" b="1" n="1"></line>
        <line t="ES" i="698" b="1" n="1"></line>
        <line t="C" i="699" b="1" n="1">! Write a terminal XML tag with empty contents (string tag)</line>
        <line k="xml_writer_write_empty_terminal_string" t="S" i="700" b="1" n="1">subroutine xml_writer_write_empty_terminal_string( this, tag, attr )</line>
        <line t="S" i="701" b="1" n="1"></line>
        <line t="C" i="702" b="1" n="1">! The XML context structure</line>
        <line t="X" i="703" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="704" b="1" n="1"></line>
        <line t="C" i="705" b="1" n="1">! The XML tag</line>
        <line t="X" i="706" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="707" b="1" n="1"></line>
        <line t="C" i="708" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="709" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="710" b="1" n="1"></line>
        <line t="C" i="711" b="1" n="1">! Call the character interface</line>
        <line t="X" i="712" b="1" n="1">  call this%write_terminal( tag%character(), attr )</line>
        <line t="X" i="713" b="1" n="1"></line>
        <line t="ES" i="714" b="1" n="1">end subroutine xml_writer_write_empty_terminal_string</line>
        <line t="ES" i="715" b="1" n="1"></line>
        <line t="ES" i="716" b="1" n="1"></line>
        <line t="C" i="717" b="1" n="1">! Write a terminal XML tag with character contents (character tag)</line>
        <line k="xml_writer_write_character_terminal_character" t="S" i="718" b="1" n="1">subroutine xml_writer_write_character_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="719" b="1" n="1"></line>
        <line t="C" i="720" b="1" n="1">! The XML context structure</line>
        <line t="X" i="721" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="722" b="1" n="1"></line>
        <line t="C" i="723" b="1" n="1">! The XML tag</line>
        <line t="X" i="724" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="725" b="1" n="1"></line>
        <line t="C" i="726" b="1" n="1">! The XML contents</line>
        <line t="X" i="727" b="1" n="1">  character(len=*), intent(in) :: value</line>
        <line t="X" i="728" b="1" n="1"></line>
        <line t="C" i="729" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="730" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="731" b="1" n="1"></line>
        <line t="C" i="732" b="1" n="1">! Optional output format</line>
        <line t="X" i="733" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="734" b="1" n="1"></line>
        <line t="C" i="735" b="1" n="1">! Local variables</line>
        <line t="X" i="736" b="1" n="1">  type(t_string) :: local</line>
        <line t="X" i="737" b="1" n="1"></line>
        <line t="C" i="738" b="1" n="1">! Check value</line>
        <line t="X" i="739" b="2" n="2">  if( len_trim(value) == 0 ) then</line>
        <line t="X" i="740" b="2" n="2"></line>
        <line t="C" i="741" b="2" n="2">!   Write empy element</line>
        <line t="X" i="742" b="2" n="2">    call this%write_terminal( tag, attr )</line>
        <line t="X" i="743" b="2" n="2"></line>
        <line t="X" i="744" b="3" n="2">  else</line>
        <line t="X" i="745" b="3" n="2"></line>
        <line t="C" i="746" b="3" n="2">!   Write start tag</line>
        <line t="X" i="747" b="3" n="2">    call this%write_start_tag( tag, attr, .false. )</line>
        <line t="X" i="748" b="3" n="2"></line>
        <line t="C" i="749" b="3" n="2">!   Encode value</line>
        <line t="X" i="750" b="3" n="2">    local = this%encoder%encode( value )</line>
        <line t="X" i="751" b="3" n="2"></line>
        <line t="C" i="752" b="3" n="2">!   Write the value</line>
        <line t="X" i="753" b="4" n="3">    if( present(fmt) ) then</line>
        <line t="X" i="754" b="4" n="3">      write( this%unit, fmt, advance='no' ) local%character()</line>
        <line t="X" i="755" b="5" n="3">    else</line>
        <line t="X" i="756" b="5" n="3">      write( this%unit, '(a)', advance='no' ) local%character()</line>
        <line t="X" i="757" b="5" n="2">    end if</line>
        <line t="X" i="758" b="5" n="2"></line>
        <line t="C" i="759" b="5" n="2">!   Write the end tag</line>
        <line t="X" i="760" b="5" n="2">    call this%write_end_tag( tag, .false. )</line>
        <line t="X" i="761" b="5" n="2"></line>
        <line t="X" i="762" b="5" n="1">  end if</line>
        <line t="X" i="763" b="5" n="1"></line>
        <line t="ES" i="764" b="5" n="1">end subroutine xml_writer_write_character_terminal_character</line>
        <line t="ES" i="765" b="1" n="1"></line>
        <line t="ES" i="766" b="1" n="1"></line>
        <line t="C" i="767" b="1" n="1">! Write a terminal XML tag with character contents (string tag)</line>
        <line k="xml_writer_write_character_terminal_string" t="S" i="768" b="1" n="1">subroutine xml_writer_write_character_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="769" b="1" n="1"></line>
        <line t="C" i="770" b="1" n="1">! The XML context structure</line>
        <line t="X" i="771" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="772" b="1" n="1"></line>
        <line t="C" i="773" b="1" n="1">! The XML tag</line>
        <line t="X" i="774" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="775" b="1" n="1"></line>
        <line t="C" i="776" b="1" n="1">! The XML contents</line>
        <line t="X" i="777" b="1" n="1">  character(len=*), intent(in) :: value</line>
        <line t="X" i="778" b="1" n="1"></line>
        <line t="C" i="779" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="780" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="781" b="1" n="1"></line>
        <line t="C" i="782" b="1" n="1">! Optional output format</line>
        <line t="X" i="783" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="784" b="1" n="1"></line>
        <line t="C" i="785" b="1" n="1">! Call the character interface</line>
        <line t="X" i="786" b="1" n="1">  call this%write_terminal( tag%character(), value, attr, fmt )</line>
        <line t="X" i="787" b="1" n="1"></line>
        <line t="ES" i="788" b="1" n="1">end subroutine xml_writer_write_character_terminal_string</line>
        <line t="ES" i="789" b="1" n="1"></line>
        <line t="ES" i="790" b="1" n="1"></line>
        <line t="C" i="791" b="1" n="1">! Write a terminal XML tag with string contents (character tag)</line>
        <line k="xml_writer_write_string_terminal_character" t="S" i="792" b="1" n="1">subroutine xml_writer_write_string_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="793" b="1" n="1"></line>
        <line t="C" i="794" b="1" n="1">! The XML context structure</line>
        <line t="X" i="795" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="796" b="1" n="1"></line>
        <line t="C" i="797" b="1" n="1">! The XML tag</line>
        <line t="X" i="798" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="799" b="1" n="1"></line>
        <line t="C" i="800" b="1" n="1">! The XML contents</line>
        <line t="X" i="801" b="1" n="1">  type(t_string), intent(in) :: value</line>
        <line t="X" i="802" b="1" n="1"></line>
        <line t="C" i="803" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="804" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="805" b="1" n="1"></line>
        <line t="C" i="806" b="1" n="1">! Optional output format</line>
        <line t="X" i="807" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="808" b="1" n="1"></line>
        <line t="C" i="809" b="1" n="1">! Call the character version</line>
        <line t="X" i="810" b="1" n="1">  call this%write_terminal( tag, value%character(), attr, fmt )</line>
        <line t="X" i="811" b="1" n="1"></line>
        <line t="ES" i="812" b="1" n="1">end subroutine xml_writer_write_string_terminal_character</line>
        <line t="ES" i="813" b="1" n="1"></line>
        <line t="ES" i="814" b="1" n="1"></line>
        <line t="C" i="815" b="1" n="1">! Write a terminal XML tag with string contents (string tag)</line>
        <line k="xml_writer_write_string_terminal_string" t="S" i="816" b="1" n="1">subroutine xml_writer_write_string_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="817" b="1" n="1"></line>
        <line t="C" i="818" b="1" n="1">! The XML context structure</line>
        <line t="X" i="819" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="820" b="1" n="1"></line>
        <line t="C" i="821" b="1" n="1">! The XML tag</line>
        <line t="X" i="822" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="823" b="1" n="1"></line>
        <line t="C" i="824" b="1" n="1">! The XML contents</line>
        <line t="X" i="825" b="1" n="1">  type(t_string), intent(in) :: value</line>
        <line t="X" i="826" b="1" n="1"></line>
        <line t="C" i="827" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="828" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="829" b="1" n="1"></line>
        <line t="C" i="830" b="1" n="1">! Optional output format</line>
        <line t="X" i="831" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="832" b="1" n="1"></line>
        <line t="C" i="833" b="1" n="1">! Call the character interface</line>
        <line t="X" i="834" b="1" n="1">  call this%write_terminal( tag%character(), value%character(), attr, fmt )</line>
        <line t="X" i="835" b="1" n="1"></line>
        <line t="ES" i="836" b="1" n="1">end subroutine xml_writer_write_string_terminal_string</line>
        <line t="ES" i="837" b="1" n="1"></line>
        <line t="ES" i="838" b="1" n="1"></line>
        <line t="C" i="839" b="1" n="1">! Write a terminal XML tag with integer (kind=1) contents (character tag)</line>
        <line k="xml_writer_write_int1_terminal_character" t="S" i="840" b="1" n="1">subroutine xml_writer_write_int1_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="841" b="1" n="1"></line>
        <line t="C" i="842" b="1" n="1">! The XML context structure</line>
        <line t="X" i="843" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="844" b="1" n="1"></line>
        <line t="C" i="845" b="1" n="1">! The XML tag</line>
        <line t="X" i="846" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="847" b="1" n="1"></line>
        <line t="C" i="848" b="1" n="1">! The XML contents</line>
        <line t="X" i="849" b="1" n="1">  integer(kind=1), intent(in) :: value</line>
        <line t="X" i="850" b="1" n="1"></line>
        <line t="C" i="851" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="852" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="853" b="1" n="1"></line>
        <line t="C" i="854" b="1" n="1">! Optional output format</line>
        <line t="X" i="855" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="856" b="1" n="1"></line>
        <line t="C" i="857" b="1" n="1">! Call default subroutine</line>
        <line t="X" i="858" b="1" n="1">  call this%write_terminal( tag, int(value,kind=4), attr, fmt )</line>
        <line t="X" i="859" b="1" n="1"></line>
        <line t="ES" i="860" b="1" n="1">end subroutine xml_writer_write_int1_terminal_character</line>
        <line t="ES" i="861" b="1" n="1"></line>
        <line t="ES" i="862" b="1" n="1"></line>
        <line t="C" i="863" b="1" n="1">! Write a terminal XML tag with integer (kind=1) contents (string tag)</line>
        <line k="xml_writer_write_int1_terminal_string" t="S" i="864" b="1" n="1">subroutine xml_writer_write_int1_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="865" b="1" n="1"></line>
        <line t="C" i="866" b="1" n="1">! The XML context structure</line>
        <line t="X" i="867" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="868" b="1" n="1"></line>
        <line t="C" i="869" b="1" n="1">! The XML tag</line>
        <line t="X" i="870" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="871" b="1" n="1"></line>
        <line t="C" i="872" b="1" n="1">! The XML contents</line>
        <line t="X" i="873" b="1" n="1">  integer(kind=1), intent(in) :: value</line>
        <line t="X" i="874" b="1" n="1"></line>
        <line t="C" i="875" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="876" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="877" b="1" n="1"></line>
        <line t="C" i="878" b="1" n="1">! Optional output format</line>
        <line t="X" i="879" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="880" b="1" n="1"></line>
        <line t="C" i="881" b="1" n="1">! Call the character interface</line>
        <line t="X" i="882" b="1" n="1">  call this%write_terminal( tag%character(), value, attr, fmt )</line>
        <line t="X" i="883" b="1" n="1"></line>
        <line t="ES" i="884" b="1" n="1">end subroutine xml_writer_write_int1_terminal_string</line>
        <line t="ES" i="885" b="1" n="1"></line>
        <line t="ES" i="886" b="1" n="1"></line>
        <line t="C" i="887" b="1" n="1">! Write a terminal XML tag with integer (kind=2) contents (character tag)</line>
        <line k="xml_writer_write_int2_terminal_character" t="S" i="888" b="1" n="1">subroutine xml_writer_write_int2_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="889" b="1" n="1"></line>
        <line t="C" i="890" b="1" n="1">! The XML context structure</line>
        <line t="X" i="891" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="892" b="1" n="1"></line>
        <line t="C" i="893" b="1" n="1">! The XML tag</line>
        <line t="X" i="894" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="895" b="1" n="1"></line>
        <line t="C" i="896" b="1" n="1">! The XML contents</line>
        <line t="X" i="897" b="1" n="1">  integer(kind=2), intent(in) :: value</line>
        <line t="X" i="898" b="1" n="1"></line>
        <line t="C" i="899" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="900" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="901" b="1" n="1"></line>
        <line t="C" i="902" b="1" n="1">! Optional output format</line>
        <line t="X" i="903" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="904" b="1" n="1"></line>
        <line t="C" i="905" b="1" n="1">! Call default subroutine</line>
        <line t="X" i="906" b="1" n="1">  call this%write_terminal( tag, int(value,kind=8), attr, fmt )</line>
        <line t="X" i="907" b="1" n="1"></line>
        <line t="ES" i="908" b="1" n="1">end subroutine xml_writer_write_int2_terminal_character</line>
        <line t="ES" i="909" b="1" n="1"></line>
        <line t="ES" i="910" b="1" n="1"></line>
        <line t="C" i="911" b="1" n="1">! Write a terminal XML tag with integer (kind=2) contents (string tag)</line>
        <line k="xml_writer_write_int2_terminal_string" t="S" i="912" b="1" n="1">subroutine xml_writer_write_int2_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="913" b="1" n="1"></line>
        <line t="C" i="914" b="1" n="1">! The XML context structure</line>
        <line t="X" i="915" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="916" b="1" n="1"></line>
        <line t="C" i="917" b="1" n="1">! The XML tag</line>
        <line t="X" i="918" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="919" b="1" n="1"></line>
        <line t="C" i="920" b="1" n="1">! The XML contents</line>
        <line t="X" i="921" b="1" n="1">  integer(kind=2), intent(in) :: value</line>
        <line t="X" i="922" b="1" n="1"></line>
        <line t="C" i="923" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="924" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="925" b="1" n="1"></line>
        <line t="C" i="926" b="1" n="1">! Optional output format</line>
        <line t="X" i="927" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="928" b="1" n="1"></line>
        <line t="C" i="929" b="1" n="1">! Call the character interface</line>
        <line t="X" i="930" b="1" n="1">  call this%write_terminal( tag%character(), value, attr, fmt )</line>
        <line t="X" i="931" b="1" n="1"></line>
        <line t="ES" i="932" b="1" n="1">end subroutine xml_writer_write_int2_terminal_string</line>
        <line t="ES" i="933" b="1" n="1"></line>
        <line t="ES" i="934" b="1" n="1"></line>
        <line t="C" i="935" b="1" n="1">! Write a terminal XML tag with integer (default kind=4) contents (character tag)</line>
        <line k="xml_writer_write_integer_terminal_character" t="S" i="936" b="1" n="1">subroutine xml_writer_write_integer_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="937" b="1" n="1"></line>
        <line t="C" i="938" b="1" n="1">! The XML context structure</line>
        <line t="X" i="939" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="940" b="1" n="1"></line>
        <line t="C" i="941" b="1" n="1">! The XML tag</line>
        <line t="X" i="942" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="943" b="1" n="1"></line>
        <line t="C" i="944" b="1" n="1">! The XML contents</line>
        <line t="X" i="945" b="1" n="1">  integer, intent(in) :: value</line>
        <line t="X" i="946" b="1" n="1"></line>
        <line t="C" i="947" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="948" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="949" b="1" n="1"></line>
        <line t="C" i="950" b="1" n="1">! Optional output format</line>
        <line t="X" i="951" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="952" b="1" n="1"></line>
        <line t="C" i="953" b="1" n="1">! Call default subroutine</line>
        <line t="X" i="954" b="1" n="1">  call this%write_terminal( tag, int(value,kind=8), attr, fmt )</line>
        <line t="X" i="955" b="1" n="1"></line>
        <line t="ES" i="956" b="1" n="1">end subroutine xml_writer_write_integer_terminal_character</line>
        <line t="ES" i="957" b="1" n="1"></line>
        <line t="ES" i="958" b="1" n="1"></line>
        <line t="C" i="959" b="1" n="1">! Write a terminal XML tag with integer (default kind=4) contents (string tag)</line>
        <line k="xml_writer_write_integer_terminal_string" t="S" i="960" b="1" n="1">subroutine xml_writer_write_integer_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="961" b="1" n="1"></line>
        <line t="C" i="962" b="1" n="1">! The XML context structure</line>
        <line t="X" i="963" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="964" b="1" n="1"></line>
        <line t="C" i="965" b="1" n="1">! The XML tag</line>
        <line t="X" i="966" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="967" b="1" n="1"></line>
        <line t="C" i="968" b="1" n="1">! The XML contents</line>
        <line t="X" i="969" b="1" n="1">  integer, intent(in) :: value</line>
        <line t="X" i="970" b="1" n="1"></line>
        <line t="C" i="971" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="972" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="973" b="1" n="1"></line>
        <line t="C" i="974" b="1" n="1">! Optional output format</line>
        <line t="X" i="975" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="976" b="1" n="1"></line>
        <line t="C" i="977" b="1" n="1">! Call the character interface</line>
        <line t="X" i="978" b="1" n="1">  call this%write_terminal( tag%character(), value, attr, fmt )</line>
        <line t="X" i="979" b="1" n="1"></line>
        <line t="ES" i="980" b="1" n="1">end subroutine xml_writer_write_integer_terminal_string</line>
        <line t="ES" i="981" b="1" n="1"></line>
        <line t="ES" i="982" b="1" n="1"></line>
        <line t="C" i="983" b="1" n="1">! Write a terminal XML tag with integer (kind=2) contents (character tag)</line>
        <line k="xml_writer_write_int8_terminal_character" t="S" i="984" b="1" n="1">subroutine xml_writer_write_int8_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="985" b="1" n="1"></line>
        <line t="C" i="986" b="1" n="1">! The XML context structure</line>
        <line t="X" i="987" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="988" b="1" n="1"></line>
        <line t="C" i="989" b="1" n="1">! The XML tag</line>
        <line t="X" i="990" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="991" b="1" n="1"></line>
        <line t="C" i="992" b="1" n="1">! The XML contents</line>
        <line t="X" i="993" b="1" n="1">  integer(kind=8), intent(in) :: value</line>
        <line t="X" i="994" b="1" n="1"></line>
        <line t="C" i="995" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="996" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="997" b="1" n="1"></line>
        <line t="C" i="998" b="1" n="1">! Optional output format</line>
        <line t="X" i="999" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1000" b="1" n="1"></line>
        <line t="C" i="1001" b="1" n="1">! Local variables</line>
        <line t="X" i="1002" b="1" n="1">  character(len=64) :: buffer</line>
        <line t="X" i="1003" b="1" n="1"></line>
        <line t="C" i="1004" b="1" n="1">! Write start tag</line>
        <line t="X" i="1005" b="1" n="1">  call this%write_start_tag( tag, attr, .false. )</line>
        <line t="X" i="1006" b="1" n="1"></line>
        <line t="C" i="1007" b="1" n="1">! Write the value</line>
        <line t="X" i="1008" b="2" n="2">  if( present(fmt) ) then</line>
        <line t="X" i="1009" b="2" n="2">    write( buffer, fmt ) value</line>
        <line t="X" i="1010" b="3" n="2">  else</line>
        <line t="X" i="1011" b="3" n="2">    write( buffer, '(i0)' ) value</line>
        <line t="X" i="1012" b="3" n="1">  end if</line>
        <line t="X" i="1013" b="3" n="1">  write( this%unit, '(a)', advance='no' ) trim(adjustl(buffer))</line>
        <line t="X" i="1014" b="3" n="1"></line>
        <line t="C" i="1015" b="3" n="1">! Write the end tag</line>
        <line t="X" i="1016" b="3" n="1">  call this%write_end_tag( tag, .false. )</line>
        <line t="X" i="1017" b="3" n="1"></line>
        <line t="ES" i="1018" b="3" n="1">end subroutine xml_writer_write_int8_terminal_character</line>
        <line t="ES" i="1019" b="1" n="1"></line>
        <line t="ES" i="1020" b="1" n="1"></line>
        <line t="C" i="1021" b="1" n="1">! Write a terminal XML tag with integer (kind=2) contents (string tag)</line>
        <line k="xml_writer_write_int8_terminal_string" t="S" i="1022" b="1" n="1">subroutine xml_writer_write_int8_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="1023" b="1" n="1"></line>
        <line t="C" i="1024" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1025" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1026" b="1" n="1"></line>
        <line t="C" i="1027" b="1" n="1">! The XML tag</line>
        <line t="X" i="1028" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="1029" b="1" n="1"></line>
        <line t="C" i="1030" b="1" n="1">! The XML contents</line>
        <line t="X" i="1031" b="1" n="1">  integer(kind=8), intent(in) :: value</line>
        <line t="X" i="1032" b="1" n="1"></line>
        <line t="C" i="1033" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1034" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1035" b="1" n="1"></line>
        <line t="C" i="1036" b="1" n="1">! Optional output format</line>
        <line t="X" i="1037" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1038" b="1" n="1"></line>
        <line t="C" i="1039" b="1" n="1">! Call the character interface</line>
        <line t="X" i="1040" b="1" n="1">  call this%write_terminal( tag%character(), value, attr, fmt )</line>
        <line t="X" i="1041" b="1" n="1"></line>
        <line t="ES" i="1042" b="1" n="1">end subroutine xml_writer_write_int8_terminal_string</line>
        <line t="ES" i="1043" b="1" n="1"></line>
        <line t="ES" i="1044" b="1" n="1"></line>
        <line t="C" i="1045" b="1" n="1">! Write a terminal XML tag with real contents (character tag)</line>
        <line k="xml_writer_write_real_terminal_character" t="S" i="1046" b="1" n="1">subroutine xml_writer_write_real_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="1047" b="1" n="1"></line>
        <line t="C" i="1048" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1049" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1050" b="1" n="1"></line>
        <line t="C" i="1051" b="1" n="1">! The XML tag</line>
        <line t="X" i="1052" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="1053" b="1" n="1"></line>
        <line t="C" i="1054" b="1" n="1">! The XML contents</line>
        <line t="X" i="1055" b="1" n="1">  real, intent(in) :: value</line>
        <line t="X" i="1056" b="1" n="1"></line>
        <line t="C" i="1057" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1058" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1059" b="1" n="1"></line>
        <line t="C" i="1060" b="1" n="1">! Optional output format</line>
        <line t="X" i="1061" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1062" b="1" n="1"></line>
        <line t="C" i="1063" b="1" n="1">! Local variables</line>
        <line t="X" i="1064" b="1" n="1">  character(len=64) :: buffer</line>
        <line t="X" i="1065" b="1" n="1"></line>
        <line t="C" i="1066" b="1" n="1">! Write start tag</line>
        <line t="X" i="1067" b="1" n="1">  call this%write_start_tag( tag, attr, .false. )</line>
        <line t="X" i="1068" b="1" n="1"></line>
        <line t="C" i="1069" b="1" n="1">! Write the value</line>
        <line t="X" i="1070" b="2" n="2">  if( present(fmt) .and. fmt /= '' ) then</line>
        <line t="X" i="1071" b="2" n="2">    write( buffer, fmt ) value</line>
        <line t="X" i="1072" b="3" n="2">  else</line>
        <line t="X" i="1073" b="3" n="2">    write( buffer, '(a)' ) trim(character(value))</line>
        <line t="X" i="1074" b="3" n="1">  end if</line>
        <line t="X" i="1075" b="3" n="1">  write( this%unit, '(a)', advance='no' ) adjustl(trim(buffer))</line>
        <line t="X" i="1076" b="3" n="1"></line>
        <line t="C" i="1077" b="3" n="1">! Write the end tag</line>
        <line t="X" i="1078" b="3" n="1">  call this%write_end_tag( tag, .false. )</line>
        <line t="X" i="1079" b="3" n="1"></line>
        <line t="ES" i="1080" b="3" n="1">end subroutine xml_writer_write_real_terminal_character</line>
        <line t="ES" i="1081" b="1" n="1"></line>
        <line t="ES" i="1082" b="1" n="1"></line>
        <line t="C" i="1083" b="1" n="1">! Write a terminal XML tag with real contents (string tag)</line>
        <line k="xml_writer_write_real_terminal_string" t="S" i="1084" b="1" n="1">subroutine xml_writer_write_real_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="1085" b="1" n="1"></line>
        <line t="C" i="1086" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1087" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1088" b="1" n="1"></line>
        <line t="C" i="1089" b="1" n="1">! The XML tag</line>
        <line t="X" i="1090" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="1091" b="1" n="1"></line>
        <line t="C" i="1092" b="1" n="1">! The XML contents</line>
        <line t="X" i="1093" b="1" n="1">  real, intent(in) :: value</line>
        <line t="X" i="1094" b="1" n="1"></line>
        <line t="C" i="1095" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1096" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1097" b="1" n="1"></line>
        <line t="C" i="1098" b="1" n="1">! Optional output format</line>
        <line t="X" i="1099" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1100" b="1" n="1"></line>
        <line t="C" i="1101" b="1" n="1">! Call the character interface</line>
        <line t="X" i="1102" b="1" n="1">  call this%write_terminal( tag%character(), value, attr, fmt )</line>
        <line t="X" i="1103" b="1" n="1"></line>
        <line t="ES" i="1104" b="1" n="1">end subroutine xml_writer_write_real_terminal_string</line>
        <line t="ES" i="1105" b="1" n="1"></line>
        <line t="ES" i="1106" b="1" n="1"></line>
        <line t="C" i="1107" b="1" n="1">! Write a terminal XML tag with double precission contents (character tag)</line>
        <line k="xml_writer_write_double_terminal_character" t="S" i="1108" b="1" n="1">subroutine xml_writer_write_double_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="1109" b="1" n="1"></line>
        <line t="C" i="1110" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1111" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1112" b="1" n="1"></line>
        <line t="C" i="1113" b="1" n="1">! The XML tag</line>
        <line t="X" i="1114" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="1115" b="1" n="1"></line>
        <line t="C" i="1116" b="1" n="1">! The XML contents</line>
        <line t="X" i="1117" b="1" n="1">  real(kind=8), intent(in) :: value</line>
        <line t="X" i="1118" b="1" n="1"></line>
        <line t="C" i="1119" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1120" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1121" b="1" n="1"></line>
        <line t="C" i="1122" b="1" n="1">! Optional output format</line>
        <line t="X" i="1123" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1124" b="1" n="1"></line>
        <line t="C" i="1125" b="1" n="1">! Local variables</line>
        <line t="X" i="1126" b="1" n="1">  character(len=64) :: buffer</line>
        <line t="X" i="1127" b="1" n="1"></line>
        <line t="C" i="1128" b="1" n="1">! Write start tag</line>
        <line t="X" i="1129" b="1" n="1">  call this%write_start_tag( tag, attr, .false. )</line>
        <line t="X" i="1130" b="1" n="1"></line>
        <line t="C" i="1131" b="1" n="1">! Write the value</line>
        <line t="X" i="1132" b="2" n="2">  if( present(fmt) .and. fmt /= '' ) then</line>
        <line t="X" i="1133" b="2" n="2">    write( buffer, fmt ) value</line>
        <line t="X" i="1134" b="3" n="2">  else</line>
        <line t="X" i="1135" b="3" n="2">    write( buffer, '(a)' ) trim(character(value))</line>
        <line t="X" i="1136" b="3" n="1">  end if</line>
        <line t="X" i="1137" b="3" n="1">  write( this%unit, '(a)', advance='no' ) trim(adjustl(buffer))</line>
        <line t="X" i="1138" b="3" n="1"></line>
        <line t="C" i="1139" b="3" n="1">! Write the end tag</line>
        <line t="X" i="1140" b="3" n="1">  call this%write_end_tag( tag, .false. )</line>
        <line t="X" i="1141" b="3" n="1"></line>
        <line t="ES" i="1142" b="3" n="1">end subroutine xml_writer_write_double_terminal_character</line>
        <line t="ES" i="1143" b="1" n="1"></line>
        <line t="ES" i="1144" b="1" n="1"></line>
        <line t="C" i="1145" b="1" n="1">! Write a terminal XML tag with double precission contents (string tag)</line>
        <line k="xml_writer_write_double_terminal_string" t="S" i="1146" b="1" n="1">subroutine xml_writer_write_double_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="1147" b="1" n="1"></line>
        <line t="C" i="1148" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1149" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1150" b="1" n="1"></line>
        <line t="C" i="1151" b="1" n="1">! The XML tag</line>
        <line t="X" i="1152" b="1" n="1">  type(t_String), intent(in) :: tag</line>
        <line t="X" i="1153" b="1" n="1"></line>
        <line t="C" i="1154" b="1" n="1">! The XML contents</line>
        <line t="X" i="1155" b="1" n="1">  real(kind=8), intent(in) :: value</line>
        <line t="X" i="1156" b="1" n="1"></line>
        <line t="C" i="1157" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1158" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1159" b="1" n="1"></line>
        <line t="C" i="1160" b="1" n="1">! Optional output format</line>
        <line t="X" i="1161" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1162" b="1" n="1"></line>
        <line t="C" i="1163" b="1" n="1">! Call the character interface</line>
        <line t="X" i="1164" b="1" n="1">  call this%write_terminal( tag%character(), value, attr, fmt )</line>
        <line t="X" i="1165" b="1" n="1"></line>
        <line t="ES" i="1166" b="1" n="1">end subroutine xml_writer_write_double_terminal_string</line>
        <line t="ES" i="1167" b="1" n="1"></line>
        <line t="ES" i="1168" b="1" n="1"></line>
        <line t="C" i="1169" b="1" n="1">! Write a terminal XML tag with complex contents (character tag)</line>
        <line k="xml_writer_write_complex_terminal_character" t="S" i="1170" b="1" n="1">subroutine xml_writer_write_complex_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="1171" b="1" n="1"></line>
        <line t="C" i="1172" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1173" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1174" b="1" n="1"></line>
        <line t="C" i="1175" b="1" n="1">! The XML tag</line>
        <line t="X" i="1176" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="1177" b="1" n="1"></line>
        <line t="C" i="1178" b="1" n="1">! The XML contents</line>
        <line t="X" i="1179" b="1" n="1">  complex(kind=4), intent(in) :: value</line>
        <line t="X" i="1180" b="1" n="1"></line>
        <line t="C" i="1181" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1182" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1183" b="1" n="1"></line>
        <line t="C" i="1184" b="1" n="1">! Optional output format</line>
        <line t="X" i="1185" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1186" b="1" n="1"></line>
        <line t="C" i="1187" b="1" n="1">! Write start tag</line>
        <line t="X" i="1188" b="1" n="1">  call this%write_start_tag( tag, attr )</line>
        <line t="X" i="1189" b="1" n="1"></line>
        <line t="C" i="1190" b="1" n="1">! Write the value</line>
        <line t="X" i="1191" b="1" n="1">  call this%write_terminal( 'r', real(value), fmt=fmt )</line>
        <line t="X" i="1192" b="1" n="1">  call this%write_terminal( 'i', aimag(value), fmt=fmt )</line>
        <line t="X" i="1193" b="1" n="1"></line>
        <line t="C" i="1194" b="1" n="1">! Write the end tag</line>
        <line t="X" i="1195" b="1" n="1">  call this%write_end_tag( tag )</line>
        <line t="X" i="1196" b="1" n="1"></line>
        <line t="ES" i="1197" b="1" n="1">end subroutine xml_writer_write_complex_terminal_character</line>
        <line t="ES" i="1198" b="1" n="1"></line>
        <line t="ES" i="1199" b="1" n="1"></line>
        <line t="C" i="1200" b="1" n="1">! Write a terminal XML tag with complex contents (string tag)</line>
        <line k="xml_writer_write_complex_terminal_string" t="S" i="1201" b="1" n="1">subroutine xml_writer_write_complex_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="1202" b="1" n="1"></line>
        <line t="C" i="1203" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1204" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1205" b="1" n="1"></line>
        <line t="C" i="1206" b="1" n="1">! The XML tag</line>
        <line t="X" i="1207" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="1208" b="1" n="1"></line>
        <line t="C" i="1209" b="1" n="1">! The XML contents</line>
        <line t="X" i="1210" b="1" n="1">  complex(kind=4), intent(in) :: value</line>
        <line t="X" i="1211" b="1" n="1"></line>
        <line t="C" i="1212" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1213" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1214" b="1" n="1"></line>
        <line t="C" i="1215" b="1" n="1">! Optional output format</line>
        <line t="X" i="1216" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1217" b="1" n="1"></line>
        <line t="C" i="1218" b="1" n="1">! Call the character interface</line>
        <line t="X" i="1219" b="1" n="1">  call this%write_terminal( tag%character(), value, attr, fmt )</line>
        <line t="X" i="1220" b="1" n="1"></line>
        <line t="ES" i="1221" b="1" n="1">end subroutine xml_writer_write_complex_terminal_string</line>
        <line t="ES" i="1222" b="1" n="1"></line>
        <line t="ES" i="1223" b="1" n="1"></line>
        <line t="C" i="1224" b="1" n="1">! Write a terminal XML tag with complex contents (character tag)</line>
        <line k="xml_writer_write_double_complex_terminal_character" t="S" i="1225" b="1" n="1">subroutine xml_writer_write_double_complex_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="1226" b="1" n="1"></line>
        <line t="C" i="1227" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1228" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1229" b="1" n="1"></line>
        <line t="C" i="1230" b="1" n="1">! The XML tag</line>
        <line t="X" i="1231" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="1232" b="1" n="1"></line>
        <line t="C" i="1233" b="1" n="1">! The XML contents</line>
        <line t="X" i="1234" b="1" n="1">  complex(kind=8), intent(in) :: value</line>
        <line t="X" i="1235" b="1" n="1"></line>
        <line t="C" i="1236" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1237" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1238" b="1" n="1"></line>
        <line t="C" i="1239" b="1" n="1">! Optional output format</line>
        <line t="X" i="1240" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1241" b="1" n="1"></line>
        <line t="C" i="1242" b="1" n="1">! Local variables</line>
        <line t="X" i="1243" b="1" n="1">  real(kind=8) :: rx, ix</line>
        <line t="X" i="1244" b="1" n="1"></line>
        <line t="C" i="1245" b="1" n="1">! Write start tag</line>
        <line t="X" i="1246" b="1" n="1">  call this%write_start_tag( tag, attr )</line>
        <line t="X" i="1247" b="1" n="1"></line>
        <line t="C" i="1248" b="1" n="1">! Write the value (no imag for real(kind=8) in 2003 standard)</line>
        <line t="X" i="1249" b="1" n="1">  rx =  real(value,kind=8)</line>
        <line t="X" i="1250" b="1" n="1">  ix = -real( cmplx(0d0,1d0,kind=8) * value, kind=8 )</line>
        <line t="X" i="1251" b="1" n="1">  call this%write_terminal( 'r', rx, fmt=fmt )</line>
        <line t="X" i="1252" b="1" n="1">  call this%write_terminal( 'i', ix, fmt=fmt )</line>
        <line t="X" i="1253" b="1" n="1"></line>
        <line t="C" i="1254" b="1" n="1">! Write the end tag</line>
        <line t="X" i="1255" b="1" n="1">  call this%write_end_tag( tag )</line>
        <line t="X" i="1256" b="1" n="1"></line>
        <line t="ES" i="1257" b="1" n="1">end subroutine xml_writer_write_double_complex_terminal_character</line>
        <line t="ES" i="1258" b="1" n="1"></line>
        <line t="ES" i="1259" b="1" n="1"></line>
        <line t="C" i="1260" b="1" n="1">! Write a terminal XML tag with complex contents (string tag)</line>
        <line k="xml_writer_write_double_complex_terminal_string" t="S" i="1261" b="1" n="1">subroutine xml_writer_write_double_complex_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="1262" b="1" n="1"></line>
        <line t="C" i="1263" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1264" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1265" b="1" n="1"></line>
        <line t="C" i="1266" b="1" n="1">! The XML tag</line>
        <line t="X" i="1267" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="1268" b="1" n="1"></line>
        <line t="C" i="1269" b="1" n="1">! The XML contents</line>
        <line t="X" i="1270" b="1" n="1">  complex(kind=8), intent(in) :: value</line>
        <line t="X" i="1271" b="1" n="1"></line>
        <line t="C" i="1272" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1273" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1274" b="1" n="1"></line>
        <line t="C" i="1275" b="1" n="1">! Optional output format</line>
        <line t="X" i="1276" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1277" b="1" n="1"></line>
        <line t="C" i="1278" b="1" n="1">! Call the character interface</line>
        <line t="X" i="1279" b="1" n="1">  call this%write_terminal( tag%character(), value, attr, fmt )</line>
        <line t="X" i="1280" b="1" n="1"></line>
        <line t="ES" i="1281" b="1" n="1">end subroutine xml_writer_write_double_complex_terminal_string</line>
        <line t="ES" i="1282" b="1" n="1"></line>
        <line t="ES" i="1283" b="1" n="1"></line>
        <line t="C" i="1284" b="1" n="1">! Write a terminal XML tag with logical contents (character tag)</line>
        <line k="xml_writer_write_logical_terminal_character" t="S" i="1285" b="1" n="1">subroutine xml_writer_write_logical_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="1286" b="1" n="1"></line>
        <line t="C" i="1287" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1288" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1289" b="1" n="1"></line>
        <line t="C" i="1290" b="1" n="1">! The XML tag</line>
        <line t="X" i="1291" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="1292" b="1" n="1"></line>
        <line t="C" i="1293" b="1" n="1">! The XML contents</line>
        <line t="X" i="1294" b="1" n="1">  logical, intent(in) :: value</line>
        <line t="X" i="1295" b="1" n="1"></line>
        <line t="C" i="1296" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1297" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1298" b="1" n="1"></line>
        <line t="C" i="1299" b="1" n="1">! Optional output format</line>
        <line t="X" i="1300" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1301" b="1" n="1"></line>
        <line t="C" i="1302" b="1" n="1">! Write start tag</line>
        <line t="X" i="1303" b="1" n="1">  call this%write_start_tag( tag, attr, .false. )</line>
        <line t="X" i="1304" b="1" n="1"></line>
        <line t="C" i="1305" b="1" n="1">! Write the element</line>
        <line t="X" i="1306" b="1" n="1">  write( this%unit, '(a)', advance='no' ) trim(character(value,fmt))</line>
        <line t="X" i="1307" b="1" n="1"></line>
        <line t="C" i="1308" b="1" n="1">! Write the end tag</line>
        <line t="X" i="1309" b="1" n="1">  call this%write_end_tag( tag, .false. )</line>
        <line t="X" i="1310" b="1" n="1"></line>
        <line t="ES" i="1311" b="1" n="1">end subroutine xml_writer_write_logical_terminal_character</line>
        <line t="ES" i="1312" b="1" n="1"></line>
        <line t="ES" i="1313" b="1" n="1"></line>
        <line t="C" i="1314" b="1" n="1">! Write a terminal XML tag with logical contents (string tag)</line>
        <line k="xml_writer_write_logical_terminal_string" t="S" i="1315" b="1" n="1">subroutine xml_writer_write_logical_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="1316" b="1" n="1"></line>
        <line t="C" i="1317" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1318" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1319" b="1" n="1"></line>
        <line t="C" i="1320" b="1" n="1">! The XML tag</line>
        <line t="X" i="1321" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="1322" b="1" n="1"></line>
        <line t="C" i="1323" b="1" n="1">! The XML contents</line>
        <line t="X" i="1324" b="1" n="1">  logical, intent(in) :: value</line>
        <line t="X" i="1325" b="1" n="1"></line>
        <line t="C" i="1326" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1327" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1328" b="1" n="1"></line>
        <line t="C" i="1329" b="1" n="1">! Optional output format</line>
        <line t="X" i="1330" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1331" b="1" n="1"></line>
        <line t="C" i="1332" b="1" n="1">! Call the character interface</line>
        <line t="X" i="1333" b="1" n="1">  call this%write_terminal( tag%character(), value, attr, fmt )</line>
        <line t="X" i="1334" b="1" n="1"></line>
        <line t="ES" i="1335" b="1" n="1">end subroutine xml_writer_write_logical_terminal_string</line>
        <line t="ES" i="1336" b="1" n="1"></line>
        <line t="ES" i="1337" b="1" n="1"></line>
        <line t="C" i="1338" b="1" n="1">! Write a terminal XML tag with logical contents (character tag)</line>
        <line k="xml_writer_write_logical2_terminal_character" t="S" i="1339" b="1" n="1">subroutine xml_writer_write_logical2_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="1340" b="1" n="1"></line>
        <line t="C" i="1341" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1342" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1343" b="1" n="1"></line>
        <line t="C" i="1344" b="1" n="1">! The XML tag</line>
        <line t="X" i="1345" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="1346" b="1" n="1"></line>
        <line t="C" i="1347" b="1" n="1">! The XML contents</line>
        <line t="X" i="1348" b="1" n="1">  logical(kind=2), intent(in) :: value</line>
        <line t="X" i="1349" b="1" n="1"></line>
        <line t="C" i="1350" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1351" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1352" b="1" n="1"></line>
        <line t="C" i="1353" b="1" n="1">! Optional output format</line>
        <line t="X" i="1354" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1355" b="1" n="1"></line>
        <line t="C" i="1356" b="1" n="1">! Write start tag</line>
        <line t="X" i="1357" b="1" n="1">  call this%write_start_tag( tag, attr, .false. )</line>
        <line t="X" i="1358" b="1" n="1"></line>
        <line t="C" i="1359" b="1" n="1">! Write the value</line>
        <line t="X" i="1360" b="2" n="2">  if( present(fmt) ) then</line>
        <line t="X" i="1361" b="2" n="2">    write( this%unit, fmt, advance='no' ) value</line>
        <line t="X" i="1362" b="3" n="2">  else</line>
        <line t="X" i="1363" b="3" n="2">    write( this%unit, '(l1)', advance='no' ) value</line>
        <line t="X" i="1364" b="3" n="1">  end if</line>
        <line t="X" i="1365" b="3" n="1"></line>
        <line t="C" i="1366" b="3" n="1">! Write the end tag</line>
        <line t="X" i="1367" b="3" n="1">  call this%write_end_tag( tag, .false. )</line>
        <line t="X" i="1368" b="3" n="1"></line>
        <line t="ES" i="1369" b="3" n="1">end subroutine xml_writer_write_logical2_terminal_character</line>
        <line t="ES" i="1370" b="1" n="1"></line>
        <line t="ES" i="1371" b="1" n="1"></line>
        <line t="C" i="1372" b="1" n="1">! Write a terminal XML tag with logical contents (string tag)</line>
        <line k="xml_writer_write_logical2_terminal_string" t="S" i="1373" b="1" n="1">subroutine xml_writer_write_logical2_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="1374" b="1" n="1"></line>
        <line t="C" i="1375" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1376" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1377" b="1" n="1"></line>
        <line t="C" i="1378" b="1" n="1">! The XML tag</line>
        <line t="X" i="1379" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="1380" b="1" n="1"></line>
        <line t="C" i="1381" b="1" n="1">! The XML contents</line>
        <line t="X" i="1382" b="1" n="1">  logical(kind=2), intent(in) :: value</line>
        <line t="X" i="1383" b="1" n="1"></line>
        <line t="C" i="1384" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1385" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1386" b="1" n="1"></line>
        <line t="C" i="1387" b="1" n="1">! Optional output format</line>
        <line t="X" i="1388" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1389" b="1" n="1"></line>
        <line t="C" i="1390" b="1" n="1">! Call the character interface</line>
        <line t="X" i="1391" b="1" n="1">  call this%write_terminal( tag%character(), value, attr, fmt )</line>
        <line t="X" i="1392" b="1" n="1"></line>
        <line t="ES" i="1393" b="1" n="1">end subroutine xml_writer_write_logical2_terminal_string</line>
        <line t="ES" i="1394" b="1" n="1"></line>
        <line t="ES" i="1395" b="1" n="1"></line>
        <line t="C" i="1396" b="1" n="1">! Write a terminal XML tag with logical contents (character tag)</line>
        <line k="xml_writer_write_logical1_terminal_character" t="S" i="1397" b="1" n="1">subroutine xml_writer_write_logical1_terminal_character( this, tag, value, attr, fmt )</line>
        <line t="S" i="1398" b="1" n="1"></line>
        <line t="C" i="1399" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1400" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1401" b="1" n="1"></line>
        <line t="C" i="1402" b="1" n="1">! The XML tag</line>
        <line t="X" i="1403" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="1404" b="1" n="1"></line>
        <line t="C" i="1405" b="1" n="1">! The XML contents</line>
        <line t="X" i="1406" b="1" n="1">  logical(kind=1), intent(in) :: value</line>
        <line t="X" i="1407" b="1" n="1"></line>
        <line t="C" i="1408" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1409" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1410" b="1" n="1"></line>
        <line t="C" i="1411" b="1" n="1">! Optional output format</line>
        <line t="X" i="1412" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1413" b="1" n="1"></line>
        <line t="C" i="1414" b="1" n="1">! Write start tag</line>
        <line t="X" i="1415" b="1" n="1">  call this%write_start_tag( tag, attr, .false. )</line>
        <line t="X" i="1416" b="1" n="1"></line>
        <line t="C" i="1417" b="1" n="1">! Write the value</line>
        <line t="X" i="1418" b="2" n="2">  if( present(fmt) ) then</line>
        <line t="X" i="1419" b="2" n="2">    write( this%unit, fmt, advance='no' ) value</line>
        <line t="X" i="1420" b="3" n="2">  else</line>
        <line t="X" i="1421" b="3" n="2">    write( this%unit, '(l1)', advance='no' ) value</line>
        <line t="X" i="1422" b="3" n="1">  end if</line>
        <line t="X" i="1423" b="3" n="1"></line>
        <line t="C" i="1424" b="3" n="1">! Write the end tag</line>
        <line t="X" i="1425" b="3" n="1">  call this%write_end_tag( tag, .false. )</line>
        <line t="X" i="1426" b="3" n="1"></line>
        <line t="ES" i="1427" b="3" n="1">end subroutine xml_writer_write_logical1_terminal_character</line>
        <line t="ES" i="1428" b="1" n="1"></line>
        <line t="ES" i="1429" b="1" n="1"></line>
        <line t="C" i="1430" b="1" n="1">! Write a terminal XML tag with logical contents (string tag)</line>
        <line k="xml_writer_write_logical1_terminal_string" t="S" i="1431" b="1" n="1">subroutine xml_writer_write_logical1_terminal_string( this, tag, value, attr, fmt )</line>
        <line t="S" i="1432" b="1" n="1"></line>
        <line t="C" i="1433" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1434" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1435" b="1" n="1"></line>
        <line t="C" i="1436" b="1" n="1">! The XML tag</line>
        <line t="X" i="1437" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="1438" b="1" n="1"></line>
        <line t="C" i="1439" b="1" n="1">! The XML contents</line>
        <line t="X" i="1440" b="1" n="1">  logical(kind=1), intent(in) :: value</line>
        <line t="X" i="1441" b="1" n="1"></line>
        <line t="C" i="1442" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1443" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1444" b="1" n="1"></line>
        <line t="C" i="1445" b="1" n="1">! Optional output format</line>
        <line t="X" i="1446" b="1" n="1">  character(len=*), optional, intent(in) :: fmt</line>
        <line t="X" i="1447" b="1" n="1"></line>
        <line t="C" i="1448" b="1" n="1">! Call the character interface</line>
        <line t="X" i="1449" b="1" n="1">  call this%write_terminal( tag%character(), value, attr, fmt )</line>
        <line t="X" i="1450" b="1" n="1"></line>
        <line t="ES" i="1451" b="1" n="1">end subroutine xml_writer_write_logical1_terminal_string</line>
        <line t="ES" i="1452" b="1" n="1"></line>
        <line t="ES" i="1453" b="1" n="1"></line>
        <line t="C" i="1454" b="1" n="1">! Write a start XML tag with/without attributes</line>
        <line k="xml_writer_write_start_tag_character" t="S" i="1455" b="1" n="1">subroutine xml_writer_write_start_tag_character( this, tag, attr, newline )</line>
        <line t="S" i="1456" b="1" n="1"></line>
        <line t="C" i="1457" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1458" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1459" b="1" n="1"></line>
        <line t="C" i="1460" b="1" n="1">! The XML tag</line>
        <line t="X" i="1461" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="1462" b="1" n="1"></line>
        <line t="C" i="1463" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1464" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1465" b="1" n="1"></line>
        <line t="C" i="1466" b="1" n="1">! Optionally add a new line at the end of the tag</line>
        <line t="X" i="1467" b="1" n="1">  logical, optional, intent(in) :: newline</line>
        <line t="X" i="1468" b="1" n="1"></line>
        <line t="C" i="1469" b="1" n="1">! Advance after the start tag</line>
        <line t="X" i="1470" b="1" n="1">  character(len=3) :: advance</line>
        <line t="X" i="1471" b="1" n="1"></line>
        <line t="C" i="1472" b="1" n="1">! Local variables</line>
        <line t="X" i="1473" b="1" n="1">  integer :: i</line>
        <line t="X" i="1474" b="1" n="1">  type(t_string) :: local</line>
        <line t="X" i="1475" b="1" n="1"></line>
        <line t="C" i="1476" b="1" n="1">! Check the newline parameter</line>
        <line t="X" i="1477" b="2" n="2">  if( present(newline) ) then</line>
        <line t="X" i="1478" b="3" n="3">    if( newline ) then</line>
        <line t="X" i="1479" b="3" n="3">      advance = 'yes'</line>
        <line t="X" i="1480" b="4" n="3">    else</line>
        <line t="X" i="1481" b="4" n="3">      advance = 'no'</line>
        <line t="X" i="1482" b="4" n="2">    end if</line>
        <line t="X" i="1483" b="5" n="2">  else</line>
        <line t="X" i="1484" b="5" n="2">    advance = this%advance</line>
        <line t="X" i="1485" b="5" n="1">  end if</line>
        <line t="X" i="1486" b="5" n="1"></line>
        <line t="C" i="1487" b="5" n="1">! Write the indentation and stay in the line</line>
        <line t="X" i="1488" b="6" n="2">  if( this%indent .and. this%lines ) then</line>
        <line t="X" i="1489" b="6" n="2">    write( this%unit, '(a)', advance='no' ) this%indent_chars</line>
        <line t="X" i="1490" b="6" n="1">  end if</line>
        <line t="X" i="1491" b="6" n="1"></line>
        <line t="C" i="1492" b="6" n="1">! Check presence of attributes</line>
        <line t="X" i="1493" b="7" n="2">  if( present(attr) ) then</line>
        <line t="X" i="1494" b="7" n="2"></line>
        <line t="C" i="1495" b="7" n="2">!   Initialise the tag</line>
        <line t="X" i="1496" b="7" n="2">    write( this%unit, '(a,a)', advance='no' ) '&lt;', trim(adjustl(tag))</line>
        <line t="X" i="1497" b="7" n="2"></line>
        <line t="C" i="1498" b="7" n="2">!   Loop on the attributes</line>
        <line t="X" i="1499" b="8" n="3">    do i = lbound(attr,1), ubound(attr,1)</line>
        <line t="X" i="1500" b="8" n="3"></line>
        <line t="C" i="1501" b="8" n="3">!     Process attributes that have a name</line>
        <line t="X" i="1502" b="9" n="4">      if( attr(i)%get_name() /= '' ) then</line>
        <line t="X" i="1503" b="9" n="4"></line>
        <line t="C" i="1504" b="9" n="4">!       Write the attribute</line>
        <line t="X" i="1505" b="9" n="4">        local = attr(i)%to_string(this%encoder)</line>
        <line t="X" i="1506" b="9" n="4">        write( this%unit, '(1x,a)', advance='no' ) local%character()</line>
        <line t="X" i="1507" b="9" n="4"></line>
        <line t="X" i="1508" b="9" n="3">      end if</line>
        <line t="X" i="1509" b="9" n="3"></line>
        <line t="X" i="1510" b="9" n="2">    end do</line>
        <line t="X" i="1511" b="9" n="2"></line>
        <line t="C" i="1512" b="9" n="2">!   Complete the tag</line>
        <line t="X" i="1513" b="9" n="2">    write( this%unit, '(a)', advance=advance ) '&gt;'</line>
        <line t="X" i="1514" b="9" n="2"></line>
        <line t="X" i="1515" b="10" n="2">  else</line>
        <line t="X" i="1516" b="10" n="2"></line>
        <line t="C" i="1517" b="10" n="2">!   Write without attributes</line>
        <line t="X" i="1518" b="10" n="2">    write( this%unit, '(a,a,a)', advance=advance ) '&lt;', trim(adjustl(tag)), '&gt;'</line>
        <line t="X" i="1519" b="10" n="2"></line>
        <line t="X" i="1520" b="10" n="1">  end if</line>
        <line t="X" i="1521" b="10" n="1"></line>
        <line t="C" i="1522" b="10" n="1">! Increase indentation</line>
        <line t="X" i="1523" b="10" n="1">  call this%indent_increase()</line>
        <line t="X" i="1524" b="10" n="1"></line>
        <line t="ES" i="1525" b="10" n="1">end subroutine xml_writer_write_start_tag_character</line>
        <line t="ES" i="1526" b="1" n="1"></line>
        <line t="ES" i="1527" b="1" n="1"></line>
        <line t="C" i="1528" b="1" n="1">! Write a start XML tag with/without attributes</line>
        <line k="xml_writer_write_start_tag_string" t="S" i="1529" b="1" n="1">subroutine xml_writer_write_start_tag_string( this, tag, attr, newline )</line>
        <line t="S" i="1530" b="1" n="1"></line>
        <line t="C" i="1531" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1532" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1533" b="1" n="1"></line>
        <line t="C" i="1534" b="1" n="1">! The XML tag</line>
        <line t="X" i="1535" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="1536" b="1" n="1"></line>
        <line t="C" i="1537" b="1" n="1">! Optional attributes for the tag</line>
        <line t="X" i="1538" b="1" n="1">  type(t_xml_attribute), dimension(:), optional, intent(in) :: attr</line>
        <line t="X" i="1539" b="1" n="1"></line>
        <line t="C" i="1540" b="1" n="1">! Optionally add a new line at the end of the tag</line>
        <line t="X" i="1541" b="1" n="1">  logical, optional, intent(in) :: newline</line>
        <line t="X" i="1542" b="1" n="1"></line>
        <line t="C" i="1543" b="1" n="1">! Call the character interface</line>
        <line t="X" i="1544" b="1" n="1">  call this%write_start_tag( tag%character(), attr, newline )</line>
        <line t="X" i="1545" b="1" n="1"></line>
        <line t="ES" i="1546" b="1" n="1">end subroutine xml_writer_write_start_tag_string</line>
        <line t="ES" i="1547" b="1" n="1"></line>
        <line t="ES" i="1548" b="1" n="1"></line>
        <line t="C" i="1549" b="1" n="1">! Write an end XML tag</line>
        <line k="xml_writer_write_end_tag_character" t="S" i="1550" b="1" n="1">subroutine xml_writer_write_end_tag_character( this, tag, indent )</line>
        <line t="S" i="1551" b="1" n="1"></line>
        <line t="C" i="1552" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1553" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1554" b="1" n="1"></line>
        <line t="C" i="1555" b="1" n="1">! The XML tag</line>
        <line t="X" i="1556" b="1" n="1">  character(len=*), intent(in) :: tag</line>
        <line t="X" i="1557" b="1" n="1"></line>
        <line t="C" i="1558" b="1" n="1">! Optionally add the indentation before the end tag</line>
        <line t="X" i="1559" b="1" n="1">  logical, optional, intent(in) :: indent</line>
        <line t="X" i="1560" b="1" n="1"></line>
        <line t="C" i="1561" b="1" n="1">! Keep the et tag in the line</line>
        <line t="X" i="1562" b="1" n="1">  logical :: inline</line>
        <line t="X" i="1563" b="1" n="1"></line>
        <line t="C" i="1564" b="1" n="1">! Check the newline parameter</line>
        <line t="X" i="1565" b="2" n="2">  if( present(indent) ) then</line>
        <line t="X" i="1566" b="2" n="2">    inline = indent</line>
        <line t="X" i="1567" b="3" n="2">  else</line>
        <line t="X" i="1568" b="3" n="2">    inline = .true.</line>
        <line t="X" i="1569" b="3" n="1">  end if</line>
        <line t="X" i="1570" b="3" n="1"></line>
        <line t="C" i="1571" b="3" n="1">! Decrease indentation</line>
        <line t="X" i="1572" b="3" n="1">  call this%indent_decrease()</line>
        <line t="X" i="1573" b="3" n="1"></line>
        <line t="C" i="1574" b="3" n="1">! Determine if this end tag is in line with its start tag</line>
        <line t="X" i="1575" b="4" n="2">  if( inline ) then</line>
        <line t="X" i="1576" b="4" n="2"></line>
        <line t="C" i="1577" b="4" n="2">!   Write the indentation and stay in the line</line>
        <line t="X" i="1578" b="5" n="3">    if( this%indent .and. this%lines ) then</line>
        <line t="X" i="1579" b="5" n="3">      write( this%unit, '(a)', advance='no' ) this%indent_chars</line>
        <line t="X" i="1580" b="5" n="2">    end if</line>
        <line t="X" i="1581" b="5" n="2"></line>
        <line t="X" i="1582" b="5" n="1">  end if</line>
        <line t="X" i="1583" b="5" n="1"></line>
        <line t="C" i="1584" b="5" n="1">! Write end tag</line>
        <line t="X" i="1585" b="5" n="1">  write( this%unit, '(a,a,a)', advance=this%advance ) '&lt;/', trim(adjustl(tag)), '&gt;'</line>
        <line t="X" i="1586" b="5" n="1"></line>
        <line t="ES" i="1587" b="5" n="1">end subroutine xml_writer_write_end_tag_character</line>
        <line t="ES" i="1588" b="1" n="1"></line>
        <line t="ES" i="1589" b="1" n="1"></line>
        <line t="C" i="1590" b="1" n="1">! Write an end XML tag</line>
        <line k="xml_writer_write_end_tag_string" t="S" i="1591" b="1" n="1">subroutine xml_writer_write_end_tag_string( this, tag, indent )</line>
        <line t="S" i="1592" b="1" n="1"></line>
        <line t="C" i="1593" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1594" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1595" b="1" n="1"></line>
        <line t="C" i="1596" b="1" n="1">! The XML tag</line>
        <line t="X" i="1597" b="1" n="1">  type(t_string), intent(in) :: tag</line>
        <line t="X" i="1598" b="1" n="1"></line>
        <line t="C" i="1599" b="1" n="1">! Optionally add the indentation before the end tag</line>
        <line t="X" i="1600" b="1" n="1">  logical, optional, intent(in) :: indent</line>
        <line t="X" i="1601" b="1" n="1"></line>
        <line t="C" i="1602" b="1" n="1">! Call the character interface</line>
        <line t="X" i="1603" b="1" n="1">  call this%write_end_tag( tag%character(), indent )</line>
        <line t="X" i="1604" b="1" n="1"></line>
        <line t="ES" i="1605" b="1" n="1">end subroutine xml_writer_write_end_tag_string</line>
        <line t="ES" i="1606" b="1" n="1"></line>
        <line t="ES" i="1607" b="1" n="1"></line>
        <line t="C" i="1608" b="1" n="1">! Increase indentation level</line>
        <line k="xml_writer_indent_increase" t="S" i="1609" b="1" n="1">pure subroutine xml_writer_indent_increase( this )</line>
        <line t="S" i="1610" b="1" n="1"></line>
        <line t="C" i="1611" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1612" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1613" b="1" n="1"></line>
        <line t="C" i="1614" b="1" n="1">! Increase the indentation level</line>
        <line t="X" i="1615" b="2" n="2">  if( this%indent .and. this%lines ) then</line>
        <line t="X" i="1616" b="2" n="2">    this%indent_level = this%indent_level + 1</line>
        <line t="X" i="1617" b="2" n="2">    this%indent_chars = repeat( this%settings%get_indent_chars(), this%indent_level )</line>
        <line t="X" i="1618" b="2" n="1">  end if</line>
        <line t="X" i="1619" b="2" n="1"></line>
        <line t="ES" i="1620" b="2" n="1">end subroutine xml_writer_indent_increase</line>
        <line t="ES" i="1621" b="1" n="1"></line>
        <line t="ES" i="1622" b="1" n="1"></line>
        <line t="C" i="1623" b="1" n="1">! Decrease indentation level</line>
        <line k="xml_writer_indent_decrease" t="S" i="1624" b="1" n="1">pure subroutine xml_writer_indent_decrease( this )</line>
        <line t="S" i="1625" b="1" n="1"></line>
        <line t="C" i="1626" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1627" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1628" b="1" n="1"></line>
        <line t="C" i="1629" b="1" n="1">! Decrease the indentation level</line>
        <line t="X" i="1630" b="2" n="2">  if( this%indent .and. this%lines ) then</line>
        <line t="X" i="1631" b="2" n="2">    this%indent_level = this%indent_level - 1</line>
        <line t="X" i="1632" b="2" n="2">    this%indent_chars = repeat( this%settings%get_indent_chars(), this%indent_level )</line>
        <line t="X" i="1633" b="2" n="1">  end if</line>
        <line t="X" i="1634" b="2" n="1"></line>
        <line t="ES" i="1635" b="2" n="1">end subroutine xml_writer_indent_decrease</line>
        <line t="ES" i="1636" b="1" n="1"></line>
        <line t="ES" i="1637" b="1" n="1"></line>
        <line t="C" i="1638" b="1" n="1">! Assignment operator</line>
        <line k="xml_writer_assign" t="S" i="1639" b="1" n="1">elemental subroutine xml_writer_assign( this, other )</line>
        <line t="S" i="1640" b="1" n="1"></line>
        <line t="C" i="1641" b="1" n="1">! The XML context structure</line>
        <line t="X" i="1642" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1643" b="1" n="1"></line>
        <line t="C" i="1644" b="1" n="1">! The XML source structure</line>
        <line t="X" i="1645" b="1" n="1">  type(t_xml_writer), intent(in) :: other</line>
        <line t="X" i="1646" b="1" n="1"></line>
        <line t="C" i="1647" b="1" n="1">! Do the assignment</line>
        <line t="X" i="1648" b="1" n="1">  this%unit = other%unit</line>
        <line t="X" i="1649" b="1" n="1">  this%settings = other%settings</line>
        <line t="X" i="1650" b="1" n="1">  this%encoder = other%encoder</line>
        <line t="X" i="1651" b="1" n="1">  this%indent = other%indent</line>
        <line t="X" i="1652" b="1" n="1">  this%indent_level = other%indent_level</line>
        <line t="X" i="1653" b="1" n="1">  this%indent_chars = other%indent_chars</line>
        <line t="X" i="1654" b="1" n="1">  this%advance = other%advance</line>
        <line t="X" i="1655" b="1" n="1"></line>
        <line t="ES" i="1656" b="1" n="1">end subroutine xml_writer_assign</line>
        <line t="ES" i="1657" b="1" n="1"></line>
        <line t="ES" i="1658" b="1" n="1"></line>
        <line t="C" i="1659" b="1" n="1">! Return the value of the unit attribute in the object</line>
        <line k="xml_writer_get_unit" t="F" i="1660" b="1" n="1">elemental function xml_writer_get_unit( this ) result(res)</line>
        <line t="F" i="1661" b="1" n="1"></line>
        <line t="C" i="1662" b="1" n="1">! The object</line>
        <line t="X" i="1663" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="1664" b="1" n="1"></line>
        <line t="C" i="1665" b="1" n="1">! The returned object attribute</line>
        <line t="X" i="1666" b="1" n="1">  integer :: res</line>
        <line t="X" i="1667" b="1" n="1"></line>
        <line t="C" i="1668" b="1" n="1">! Set the return value</line>
        <line t="X" i="1669" b="1" n="1">  res = this%unit</line>
        <line t="X" i="1670" b="1" n="1"></line>
        <line t="EF" i="1671" b="1" n="1">end function xml_writer_get_unit</line>
        <line t="EF" i="1672" b="1" n="1"></line>
        <line t="EF" i="1673" b="1" n="1"></line>
        <line t="C" i="1674" b="1" n="1">! Get indent level</line>
        <line k="xml_writer_get_indent_level" t="F" i="1675" b="1" n="1">pure function xml_writer_get_indent_level( this ) result(res)</line>
        <line t="F" i="1676" b="1" n="1"></line>
        <line t="C" i="1677" b="1" n="1">! The object</line>
        <line t="X" i="1678" b="1" n="1">  class(t_xml_writer), intent(in) :: this</line>
        <line t="X" i="1679" b="1" n="1"></line>
        <line t="C" i="1680" b="1" n="1">! The indent level</line>
        <line t="X" i="1681" b="1" n="1">  integer :: res</line>
        <line t="X" i="1682" b="1" n="1">  </line>
        <line t="C" i="1683" b="1" n="1">! Get the inent level</line>
        <line t="X" i="1684" b="1" n="1">  res = this%indent_level</line>
        <line t="X" i="1685" b="1" n="1">  </line>
        <line t="EF" i="1686" b="1" n="1">end function xml_writer_get_indent_level</line>
        <line t="EF" i="1687" b="1" n="1"></line>
        <line t="EF" i="1688" b="1" n="1"></line>
        <line t="C" i="1689" b="1" n="1">! Set indent level</line>
        <line k="xml_writer_set_indent_level" t="S" i="1690" b="1" n="1">pure subroutine xml_writer_set_indent_level( this, level )</line>
        <line t="S" i="1691" b="1" n="1"></line>
        <line t="C" i="1692" b="1" n="1">! The object</line>
        <line t="X" i="1693" b="1" n="1">  class(t_xml_writer), intent(inout) :: this</line>
        <line t="X" i="1694" b="1" n="1"></line>
        <line t="C" i="1695" b="1" n="1">! The indent level</line>
        <line t="X" i="1696" b="1" n="1">  integer, intent(in) :: level</line>
        <line t="X" i="1697" b="1" n="1">  </line>
        <line t="C" i="1698" b="1" n="1">! Set the indent level</line>
        <line t="X" i="1699" b="1" n="1">  this%indent_level = level</line>
        <line t="X" i="1700" b="1" n="1">  this%indent_chars = repeat( this%settings%get_indent_chars(), this%indent_level )</line>
        <line t="X" i="1701" b="1" n="1">  </line>
        <line t="ES" i="1702" b="1" n="1">end subroutine xml_writer_set_indent_level</line>
        <line t="ES" i="1703" b="1" n="1"></line>
        <line t="M" i="1704" b="1" n="1">end module m_xml_writer</line>
        <line t="M" i="1705" b="1" n="1"></line>
    </code>
</fmx>