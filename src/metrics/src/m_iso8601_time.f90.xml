<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../fmx.xsl"?>
<fmx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="m_iso8601_time.f90">
    <context>
        <time>2025-03-09T18:18:31</time>
        <version>1.0.0.1</version>
        <path>src</path>
        <path_to_root>../</path_to_root>
        <project>Fommons</project>
        <name>m_iso8601_time.f90</name>
        <copyright>Copyright © 2020, Fran Martinez Fadrique &lt;Fran.Martinez.Fadrique@gmail.com&gt;</copyright>
    </context>
    <units>
        <unit name="m_iso8601_time" type="module">
            <main>
                <lines>
                    <source percent="56.44">114</source>
                    <comments percent="25.74">52</comments>
                    <empty percent="17.82">36</empty>
                    <total>202</total>
                </lines>
                <complexity>
                    <minimum>0</minimum>
                    <maximum>0</maximum>
                    <average>0.00</average>
                </complexity>
                <nesting>
                    <minimum>0</minimum>
                    <maximum>0</maximum>
                    <average>0.00</average>
                </nesting>
                <methods>0</methods>
            </main>
            <methods>
                <method name="iso8601_time_default" type="function">
                    <statistics>
                        <lines>
                            <source percent="49.30">35</source>
                            <comments percent="22.54">16</comments>
                            <empty percent="28.17">20</empty>
                            <total>71</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>8</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>4</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_get_hour" type="function">
                    <statistics>
                        <lines>
                            <source percent="33.33">5</source>
                            <comments percent="26.67">4</comments>
                            <empty percent="40.00">6</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_get_microsecond" type="function">
                    <statistics>
                        <lines>
                            <source percent="35.71">5</source>
                            <comments percent="28.57">4</comments>
                            <empty percent="35.71">5</empty>
                            <total>14</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_get_millisecond" type="function">
                    <statistics>
                        <lines>
                            <source percent="35.71">5</source>
                            <comments percent="28.57">4</comments>
                            <empty percent="35.71">5</empty>
                            <total>14</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_get_minute" type="function">
                    <statistics>
                        <lines>
                            <source percent="33.33">5</source>
                            <comments percent="26.67">4</comments>
                            <empty percent="40.00">6</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_get_nanosecond" type="function">
                    <statistics>
                        <lines>
                            <source percent="35.71">5</source>
                            <comments percent="28.57">4</comments>
                            <empty percent="35.71">5</empty>
                            <total>14</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_get_second" type="function">
                    <statistics>
                        <lines>
                            <source percent="35.71">5</source>
                            <comments percent="28.57">4</comments>
                            <empty percent="35.71">5</empty>
                            <total>14</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_get_time_zone" type="function">
                    <statistics>
                        <lines>
                            <source percent="35.71">5</source>
                            <comments percent="28.57">4</comments>
                            <empty percent="35.71">5</empty>
                            <total>14</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_now" type="function">
                    <statistics>
                        <lines>
                            <source percent="46.15">12</source>
                            <comments percent="23.08">6</comments>
                            <empty percent="30.77">8</empty>
                            <total>26</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_null" type="function">
                    <statistics>
                        <lines>
                            <source percent="36.36">4</source>
                            <comments percent="27.27">3</comments>
                            <empty percent="36.36">4</empty>
                            <total>11</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_hour" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">5</source>
                            <comments percent="26.67">4</comments>
                            <empty percent="40.00">6</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_hour_default" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">5</source>
                            <comments percent="26.67">4</comments>
                            <empty percent="40.00">6</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_microsecond" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="35.71">5</source>
                            <comments percent="28.57">4</comments>
                            <empty percent="35.71">5</empty>
                            <total>14</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_microsecond_default" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="41.67">5</source>
                            <comments percent="25.00">3</comments>
                            <empty percent="33.33">4</empty>
                            <total>12</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_millisecond" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="35.71">5</source>
                            <comments percent="28.57">4</comments>
                            <empty percent="35.71">5</empty>
                            <total>14</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_millisecond_default" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="41.67">5</source>
                            <comments percent="25.00">3</comments>
                            <empty percent="33.33">4</empty>
                            <total>12</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_minute" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">5</source>
                            <comments percent="26.67">4</comments>
                            <empty percent="40.00">6</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_minute_default" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="33.33">5</source>
                            <comments percent="26.67">4</comments>
                            <empty percent="40.00">6</empty>
                            <total>15</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_nanosecond" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="35.71">5</source>
                            <comments percent="28.57">4</comments>
                            <empty percent="35.71">5</empty>
                            <total>14</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_nanosecond_default" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="41.67">5</source>
                            <comments percent="25.00">3</comments>
                            <empty percent="33.33">4</empty>
                            <total>12</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_second" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="35.71">5</source>
                            <comments percent="28.57">4</comments>
                            <empty percent="35.71">5</empty>
                            <total>14</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_second_default" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="41.67">5</source>
                            <comments percent="25.00">3</comments>
                            <empty percent="33.33">4</empty>
                            <total>12</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_set_time_zone" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="35.71">5</source>
                            <comments percent="28.57">4</comments>
                            <empty percent="35.71">5</empty>
                            <total>14</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_specific" type="function">
                    <statistics>
                        <lines>
                            <source percent="49.30">35</source>
                            <comments percent="22.54">16</comments>
                            <empty percent="28.17">20</empty>
                            <total>71</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>8</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>4</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_to_string" type="function">
                    <statistics>
                        <lines>
                            <source percent="59.26">64</source>
                            <comments percent="17.59">19</comments>
                            <empty percent="23.15">25</empty>
                            <total>108</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>17</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>3</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="iso8601_time_zone_to_string" type="function">
                    <statistics>
                        <lines>
                            <source percent="56.82">25</source>
                            <comments percent="18.18">8</comments>
                            <empty percent="25.00">11</empty>
                            <total>44</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>10</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>4</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
            </methods>
            <statistics>
                <lines>
                    <source percent="47.97">389</source>
                    <comments percent="24.17">196</comments>
                    <empty percent="27.87">226</empty>
                    <total>811</total>
                </lines>
                <complexity>
                    <minimum>1</minimum>
                    <maximum>17</maximum>
                    <average>2.50</average>
                </complexity>
                <nesting>
                    <minimum>1</minimum>
                    <maximum>4</maximum>
                    <average>1.42</average>
                </nesting>
                <methods>26</methods>
            </statistics>
        </unit>
    </units>
    <statistics>
        <lines>
            <source percent="47.97">389</source>
            <comments percent="24.17">196</comments>
            <empty percent="27.87">226</empty>
            <total>811</total>
        </lines>
        <complexity>
            <minimum>1</minimum>
            <maximum>17</maximum>
            <average>2.50</average>
        </complexity>
        <nesting>
            <minimum>1</minimum>
            <maximum>4</maximum>
            <average>1.42</average>
        </nesting>
        <methods>26</methods>
    </statistics>
    <code>
        <line t="M" i="1" b="0" n="0">module m_iso8601_time</line>
        <line t="M" i="2" b="0" n="0"></line>
        <line t="C" i="3" b="0" n="0">!------------------------------------------------------------------------------</line>
        <line t="C" i="4" b="0" n="0">! Copyright : 2025, Fran Martinez Fadrique &lt;Fran.Martinez.Fadrique@gmail.com&gt;</line>
        <line t="C" i="5" b="0" n="0">! Project   : Atlantis</line>
        <line t="C" i="6" b="0" n="0">! Reference : ISO_8601-2004_E</line>
        <line t="C" i="7" b="0" n="0">! Author    : Fran Martinez Fadrique</line>
        <line t="C" i="8" b="0" n="0">! Language  : Object Oriented Fortran 2018</line>
        <line t="C" i="9" b="0" n="0">! Synopsis  : ISO8601 time format</line>
        <line t="C" i="10" b="0" n="0">!</line>
        <line t="C" i="11" b="0" n="0">! License   : This file is part of Fommons.</line>
        <line t="C" i="12" b="0" n="0">!</line>
        <line t="C" i="13" b="0" n="0">!             Fommons is free software: you can redistribute it and/or modify</line>
        <line t="C" i="14" b="0" n="0">!             it under the terms of the GNU Lesser General Public License as</line>
        <line t="C" i="15" b="0" n="0">!             published by the Free Software Foundation, either version 3 of</line>
        <line t="C" i="16" b="0" n="0">!             the License, or (at your option) any later version.</line>
        <line t="C" i="17" b="0" n="0">!</line>
        <line t="C" i="18" b="0" n="0">!             Fommons is distributed in the hope that it will be useful,</line>
        <line t="C" i="19" b="0" n="0">!             but WITHOUT ANY WARRANTY; without even the implied warranty of</line>
        <line t="C" i="20" b="0" n="0">!             MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</line>
        <line t="C" i="21" b="0" n="0">!             See the GNU Lesser General Public License for more details.</line>
        <line t="C" i="22" b="0" n="0">!</line>
        <line t="C" i="23" b="0" n="0">!             You should have received a copy of the GNU Lesser General Public</line>
        <line t="C" i="24" b="0" n="0">!             License along with Fommons.  </line>
        <line t="C" i="25" b="0" n="0">!             If not, see &lt;http://www.gnu.org/licenses/&gt;.</line>
        <line t="C" i="26" b="0" n="0">!------------------------------------------------------------------------------</line>
        <line t="C" i="27" b="0" n="0"></line>
        <line t="C" i="28" b="0" n="0">!- Start of use statements ----------------------------------------------------</line>
        <line t="C" i="29" b="0" n="0"></line>
        <line t="X" i="30" b="0" n="0">  use m_object</line>
        <line t="X" i="31" b="0" n="0"></line>
        <line t="C" i="32" b="0" n="0">!- End of use statements ------------------------------------------------------</line>
        <line t="C" i="33" b="0" n="0"></line>
        <line t="X" i="34" b="0" n="0">  implicit none</line>
        <line t="X" i="35" b="0" n="0"></line>
        <line t="C" i="36" b="0" n="0">!- Start of Public/Private declarations ---------------------------------------</line>
        <line t="C" i="37" b="0" n="0"></line>
        <line t="X" i="38" b="0" n="0">  private</line>
        <line t="X" i="39" b="0" n="0">  public t_iso8601_time</line>
        <line t="X" i="40" b="0" n="0">  public iso8601_time</line>
        <line t="X" i="41" b="0" n="0">  public iso8601_time_now</line>
        <line t="X" i="42" b="0" n="0"></line>
        <line t="X" i="43" b="0" n="0">  public iso8601_hhmmss</line>
        <line t="X" i="44" b="0" n="0">  public iso8601_hhmm</line>
        <line t="X" i="45" b="0" n="0">  public iso8601_hh</line>
        <line t="X" i="46" b="0" n="0">  public iso8601_hhmmss_s</line>
        <line t="X" i="47" b="0" n="0">  public iso8601_hhmmss_ss</line>
        <line t="X" i="48" b="0" n="0">  public iso8601_hhmmss_sss</line>
        <line t="X" i="49" b="0" n="0">  public iso8601_hhmmss_sss_sss</line>
        <line t="X" i="50" b="0" n="0">  public iso8601_hhmmss_sss_sss_sss</line>
        <line t="X" i="51" b="0" n="0">  public iso8601_zone_none</line>
        <line t="X" i="52" b="0" n="0">  public iso8601_zone_hhmm</line>
        <line t="X" i="53" b="0" n="0">  public iso8601_zone_hh</line>
        <line t="X" i="54" b="0" n="0"></line>
        <line t="X" i="55" b="0" n="0">  public iso8601_time_base_format, iso8601_time_extended_format</line>
        <line t="X" i="56" b="0" n="0"></line>
        <line t="C" i="57" b="0" n="0">!- End of Public/Private declarations -----------------------------------------</line>
        <line t="C" i="58" b="0" n="0"></line>
        <line t="C" i="59" b="0" n="0">!- Start of module variable declarations --------------------------------------</line>
        <line t="C" i="60" b="0" n="0"></line>
        <line t="C" i="61" b="0" n="0">! ISO8601 time zone format designators</line>
        <line t="X" i="62" b="0" n="0">  integer(kind=1), parameter :: iso8601_zone_none = 0_1</line>
        <line t="X" i="63" b="0" n="0">  integer(kind=1), parameter :: iso8601_zone_hhmm = 1_1</line>
        <line t="X" i="64" b="0" n="0">  integer(kind=1), parameter :: iso8601_zone_hh   = 2_1</line>
        <line t="X" i="65" b="0" n="0"></line>
        <line t="C" i="66" b="0" n="0">! Time zone designators</line>
        <line t="X" i="67" b="0" n="0">  character, parameter :: utc = 'Z'</line>
        <line t="X" i="68" b="0" n="0"></line>
        <line t="C" i="69" b="0" n="0">! ISO8601 format designators (*** for future use ***)</line>
        <line t="X" i="70" b="0" n="0">  character, parameter :: time_period_designator = 'P'</line>
        <line t="X" i="71" b="0" n="0">  character, parameter :: recurring_period_designator = 'R'</line>
        <line t="X" i="72" b="0" n="0"></line>
        <line t="C" i="73" b="0" n="0">! ISO6801 format separators (*** for future use ***)</line>
        <line t="X" i="74" b="0" n="0">  character, parameter :: time_separator = ':'</line>
        <line t="X" i="75" b="0" n="0">  character, parameter :: solidus_separator = '/'</line>
        <line t="X" i="76" b="0" n="0"></line>
        <line t="C" i="77" b="0" n="0">! Base/Extended format</line>
        <line t="X" i="78" b="0" n="0">  integer, parameter :: iso8601_time_base_format     = 1</line>
        <line t="X" i="79" b="0" n="0">  integer, parameter :: iso8601_time_extended_format = 2</line>
        <line t="X" i="80" b="0" n="0"></line>
        <line t="C" i="81" b="0" n="0">! ISO8601 time format designators</line>
        <line t="C" i="82" b="0" n="0">! The values shall be multiples of 1 to allow combination with the time desingators and allow</line>
        <line t="C" i="83" b="0" n="0">! date/time designatos to be n00+m and make unique combinations of date and time designators</line>
        <line t="X" i="84" b="0" n="0">  integer, parameter :: iso8601_hhmmss             =  1</line>
        <line t="X" i="85" b="0" n="0">  integer, parameter :: iso8601_hhmm               =  2</line>
        <line t="X" i="86" b="0" n="0">  integer, parameter :: iso8601_hh                 =  3</line>
        <line t="X" i="87" b="0" n="0">  integer, parameter :: iso8601_hhmmss_s           =  4</line>
        <line t="X" i="88" b="0" n="0">  integer, parameter :: iso8601_hhmmss_ss          =  5</line>
        <line t="X" i="89" b="0" n="0">  integer, parameter :: iso8601_hhmmss_sss         =  6</line>
        <line t="X" i="90" b="0" n="0">  integer, parameter :: iso8601_hhmmss_sss_sss     =  7</line>
        <line t="X" i="91" b="0" n="0">  integer, parameter :: iso8601_hhmmss_sss_sss_sss =  8</line>
        <line t="X" i="92" b="0" n="0">  character(len=*), parameter, dimension(2,8) :: time_format_base = reshape( [ &amp;</line>
        <line t="X" i="93" b="0" n="0">    '3i2.2                      ', 'i2.2,2(":",i2.2)           ', &amp;</line>
        <line t="X" i="94" b="0" n="0">    '2i2.2                      ', 'i2.2,":",i2.2              ', &amp;</line>
        <line t="X" i="95" b="0" n="0">    'i2.2                       ', 'i2.2                       ', &amp;</line>
        <line t="X" i="96" b="0" n="0">    '3i2.2,".",i1.1             ', 'i2.2,2(":",i2.2),".",i1.1  ', &amp;</line>
        <line t="X" i="97" b="0" n="0">    '3i2.2,".",i2.2             ', 'i2.2,2(":",i2.2),".",i2.2  ', &amp;</line>
        <line t="X" i="98" b="0" n="0">    '3i2.2,".",i3.3             ', 'i2.2,2(":",i2.2),".",i3.3  ', &amp;</line>
        <line t="X" i="99" b="0" n="0">    '3i2.2,".",2i3.3            ', 'i2.2,2(":",i2.2),".",2i3.3 ', &amp;</line>
        <line t="X" i="100" b="0" n="0">    '3i2.2,".",3i3.3            ', 'i2.2,2(":",i2.2),".",3i3.3 ' ], &amp;</line>
        <line t="X" i="101" b="0" n="0">    [ 2, 8 ] )</line>
        <line t="X" i="102" b="0" n="0">  integer :: i</line>
        <line t="X" i="103" b="0" n="0">  character(len=*), parameter, dimension(2,8) :: time_format = reshape( [ &amp;</line>
        <line t="X" i="104" b="0" n="0">    ( '(' // time_format_base(1,i) // ')', '(' // time_format_base(2,i) // ')', i=1, 8 ) ], &amp;</line>
        <line t="X" i="105" b="0" n="0">    [ 2, 8 ] )</line>
        <line t="X" i="106" b="0" n="0"></line>
        <line t="C" i="107" b="0" n="0">! Default length for character representation</line>
        <line t="X" i="108" b="0" n="0">  integer, parameter :: time_length = 32</line>
        <line t="X" i="109" b="0" n="0"></line>
        <line t="C" i="110" b="0" n="0">! The iso8601 structure</line>
        <line t="T" i="111" b="0" n="0">  type, extends(t_object) :: t_iso8601_time</line>
        <line t="X" i="112" b="0" n="0">    private</line>
        <line t="X" i="113" b="0" n="0"></line>
        <line t="C" i="114" b="0" n="0">!     Hour of the day</line>
        <line t="X" i="115" b="0" n="0">      integer(kind=1) :: hour = 0_1</line>
        <line t="X" i="116" b="0" n="0"></line>
        <line t="C" i="117" b="0" n="0">!     Minute of the hour</line>
        <line t="X" i="118" b="0" n="0">      integer(kind=1) :: minute = 0_1</line>
        <line t="X" i="119" b="0" n="0"></line>
        <line t="C" i="120" b="0" n="0">!     Second of the minute</line>
        <line t="X" i="121" b="0" n="0">      integer(kind=1) :: second = 0_1</line>
        <line t="X" i="122" b="0" n="0"></line>
        <line t="C" i="123" b="0" n="0">!     Milllisecond of the second</line>
        <line t="X" i="124" b="0" n="0">      integer(kind=2) :: millisecond = 0_2</line>
        <line t="X" i="125" b="0" n="0"></line>
        <line t="C" i="126" b="0" n="0">!     Microsecond of the milllisecond</line>
        <line t="X" i="127" b="0" n="0">      integer(kind=2) :: microsecond = 0_2</line>
        <line t="X" i="128" b="0" n="0"></line>
        <line t="C" i="129" b="0" n="0">!     Nanosecond of the microsecond</line>
        <line t="X" i="130" b="0" n="0">      integer(kind=2) :: nanosecond = 0_2</line>
        <line t="X" i="131" b="0" n="0"></line>
        <line t="C" i="132" b="0" n="0">!     World time zone</line>
        <line t="X" i="133" b="0" n="0">      character(len=6) :: time_zone = utc</line>
        <line t="X" i="134" b="0" n="0"></line>
        <line t="C" i="135" b="0" n="0">!     World time zone designator</line>
        <line t="X" i="136" b="0" n="0">      integer(kind=1) :: time_zone_designator = iso8601_zone_none</line>
        <line t="X" i="137" b="0" n="0"></line>
        <line t="X" i="138" b="0" n="0">    contains</line>
        <line t="X" i="139" b="0" n="0"></line>
        <line t="C" i="140" b="0" n="0">!     Formatting interfaces</line>
        <line t="X" i="141" b="0" n="0">      generic :: to_string =&gt; iso8601_time_to_string</line>
        <line t="X" i="142" b="0" n="0">      procedure, private :: iso8601_time_to_string</line>
        <line t="X" i="143" b="0" n="0"></line>
        <line t="C" i="144" b="0" n="0">!     Access function interfaces</line>
        <line t="X" i="145" b="0" n="0">      generic :: get_hour =&gt; iso8601_time_get_hour</line>
        <line t="X" i="146" b="0" n="0">      procedure, private :: iso8601_time_get_hour</line>
        <line t="X" i="147" b="0" n="0">      generic :: set_hour =&gt; iso8601_time_set_hour, &amp;</line>
        <line t="X" i="148" b="0" n="0">                             iso8601_time_set_hour_default</line>
        <line t="X" i="149" b="0" n="0">      procedure, private :: iso8601_time_set_hour</line>
        <line t="X" i="150" b="0" n="0">      procedure, private :: iso8601_time_set_hour_default</line>
        <line t="X" i="151" b="0" n="0">      generic :: get_minute =&gt; iso8601_time_get_minute</line>
        <line t="X" i="152" b="0" n="0">      procedure, private :: iso8601_time_get_minute</line>
        <line t="X" i="153" b="0" n="0">      generic :: set_minute =&gt; iso8601_time_set_minute, &amp;</line>
        <line t="X" i="154" b="0" n="0">                               iso8601_time_set_minute_default</line>
        <line t="X" i="155" b="0" n="0">      procedure, private :: iso8601_time_set_minute</line>
        <line t="X" i="156" b="0" n="0">      procedure, private :: iso8601_time_set_minute_default</line>
        <line t="X" i="157" b="0" n="0">      generic :: get_second =&gt; iso8601_time_get_second</line>
        <line t="X" i="158" b="0" n="0">      procedure, private :: iso8601_time_get_second</line>
        <line t="X" i="159" b="0" n="0">      generic :: set_second =&gt; iso8601_time_set_second, &amp;</line>
        <line t="X" i="160" b="0" n="0">                               iso8601_time_set_second_default</line>
        <line t="X" i="161" b="0" n="0">      procedure, private :: iso8601_time_set_second</line>
        <line t="X" i="162" b="0" n="0">      procedure, private :: iso8601_time_set_second_default</line>
        <line t="X" i="163" b="0" n="0">      generic :: get_millisecond =&gt; iso8601_time_get_millisecond</line>
        <line t="X" i="164" b="0" n="0">      procedure, private :: iso8601_time_get_millisecond</line>
        <line t="X" i="165" b="0" n="0">      generic :: set_millisecond =&gt; iso8601_time_set_millisecond, &amp;</line>
        <line t="X" i="166" b="0" n="0">                                    iso8601_time_set_millisecond_default</line>
        <line t="X" i="167" b="0" n="0">      procedure, private :: iso8601_time_set_millisecond</line>
        <line t="X" i="168" b="0" n="0">      procedure, private :: iso8601_time_set_millisecond_default</line>
        <line t="X" i="169" b="0" n="0">      generic :: get_microsecond =&gt; iso8601_time_get_microsecond</line>
        <line t="X" i="170" b="0" n="0">      procedure, private :: iso8601_time_get_microsecond</line>
        <line t="X" i="171" b="0" n="0">      generic :: set_microsecond =&gt; iso8601_time_set_microsecond, &amp;</line>
        <line t="X" i="172" b="0" n="0">                                    iso8601_time_set_microsecond_default</line>
        <line t="X" i="173" b="0" n="0">      procedure, private :: iso8601_time_set_microsecond</line>
        <line t="X" i="174" b="0" n="0">      procedure, private :: iso8601_time_set_microsecond_default</line>
        <line t="X" i="175" b="0" n="0">      generic :: get_nanosecond =&gt; iso8601_time_get_nanosecond</line>
        <line t="X" i="176" b="0" n="0">      procedure, private :: iso8601_time_get_nanosecond</line>
        <line t="X" i="177" b="0" n="0">      generic :: set_nanosecond =&gt; iso8601_time_set_nanosecond, &amp;</line>
        <line t="X" i="178" b="0" n="0">                                   iso8601_time_set_nanosecond_default</line>
        <line t="X" i="179" b="0" n="0">      procedure, private :: iso8601_time_set_nanosecond</line>
        <line t="X" i="180" b="0" n="0">      procedure, private :: iso8601_time_set_nanosecond_default</line>
        <line t="X" i="181" b="0" n="0">      generic :: get_time_zone =&gt; iso8601_time_get_time_zone</line>
        <line t="X" i="182" b="0" n="0">      procedure, private :: iso8601_time_get_time_zone</line>
        <line t="X" i="183" b="0" n="0">      generic :: set_time_zone =&gt; iso8601_time_set_time_zone</line>
        <line t="X" i="184" b="0" n="0">      procedure, private :: iso8601_time_set_time_zone</line>
        <line t="X" i="185" b="0" n="0"></line>
        <line t="C" i="186" b="0" n="0">!     Private functions</line>
        <line t="X" i="187" b="0" n="0">      procedure, private :: iso8601_time_zone_to_string</line>
        <line t="X" i="188" b="0" n="0"></line>
        <line t="T" i="189" b="0" n="0">  end type t_iso8601_time</line>
        <line t="T" i="190" b="0" n="0"></line>
        <line t="C" i="191" b="0" n="0">! Constructor interface</line>
        <line t="X" i="192" b="0" n="0">  interface iso8601_time</line>
        <line t="X" i="193" b="0" n="0">    module procedure iso8601_time_null</line>
        <line t="X" i="194" b="0" n="0">    module procedure iso8601_time_specific</line>
        <line t="X" i="195" b="0" n="0">    module procedure iso8601_time_default</line>
        <line t="X" i="196" b="0" n="0">  end interface iso8601_time</line>
        <line t="X" i="197" b="0" n="0"></line>
        <line t="C" i="198" b="0" n="0">!- End of module variable declarations ----------------------------------------</line>
        <line t="C" i="199" b="0" n="0"></line>
        <line t="X" i="200" b="0" n="0">contains</line>
        <line t="X" i="201" b="0" n="0"></line>
        <line t="C" i="202" b="0" n="0">! Default time constructor</line>
        <line k="iso8601_time_null" t="F" i="203" b="1" n="1">pure function iso8601_time_null() result(res)</line>
        <line t="F" i="204" b="1" n="1"></line>
        <line t="C" i="205" b="1" n="1">! The constructed structure</line>
        <line t="X" i="206" b="1" n="1">  type(t_iso8601_time) :: res</line>
        <line t="X" i="207" b="1" n="1"></line>
        <line t="C" i="208" b="1" n="1">! Initialise result</line>
        <line t="X" i="209" b="1" n="1">  res = t_iso8601_time()</line>
        <line t="X" i="210" b="1" n="1"></line>
        <line t="EF" i="211" b="1" n="1">end function iso8601_time_null</line>
        <line t="EF" i="212" b="1" n="1"></line>
        <line t="EF" i="213" b="1" n="1"></line>
        <line t="C" i="214" b="1" n="1">! Time constructor</line>
        <line k="iso8601_time_specific" t="F" i="215" b="1" n="1">pure function iso8601_time_specific( hour, minute, second, &amp;</line>
        <line t="X" i="216" b="1" n="1">                                     millisecond, microsecond, nanosecond, &amp;</line>
        <line t="X" i="217" b="1" n="1">                                     time_zone ) result(res)</line>
        <line t="X" i="218" b="1" n="1"></line>
        <line t="C" i="219" b="1" n="1">! The hour</line>
        <line t="X" i="220" b="1" n="1">  integer(kind=1), intent(in) :: hour</line>
        <line t="X" i="221" b="1" n="1"></line>
        <line t="C" i="222" b="1" n="1">! The minute</line>
        <line t="X" i="223" b="1" n="1">  integer(kind=1), intent(in) :: minute</line>
        <line t="X" i="224" b="1" n="1"></line>
        <line t="C" i="225" b="1" n="1">! The second</line>
        <line t="X" i="226" b="1" n="1">  integer(kind=1), intent(in) :: second</line>
        <line t="X" i="227" b="1" n="1"></line>
        <line t="C" i="228" b="1" n="1">! The millisecond</line>
        <line t="X" i="229" b="1" n="1">  integer(kind=2), optional, intent(in) :: millisecond</line>
        <line t="X" i="230" b="1" n="1"></line>
        <line t="C" i="231" b="1" n="1">! The microsecond</line>
        <line t="X" i="232" b="1" n="1">  integer(kind=2), optional, intent(in) :: microsecond</line>
        <line t="X" i="233" b="1" n="1"></line>
        <line t="C" i="234" b="1" n="1">! The nanosecond</line>
        <line t="X" i="235" b="1" n="1">  integer(kind=2), optional, intent(in) :: nanosecond</line>
        <line t="X" i="236" b="1" n="1"></line>
        <line t="C" i="237" b="1" n="1">! The time zone</line>
        <line t="X" i="238" b="1" n="1">  character(len=*), optional, intent(in) :: time_zone</line>
        <line t="X" i="239" b="1" n="1"></line>
        <line t="C" i="240" b="1" n="1">! The constructed structure</line>
        <line t="X" i="241" b="1" n="1">  type(t_iso8601_time) :: res</line>
        <line t="X" i="242" b="1" n="1"></line>
        <line t="C" i="243" b="1" n="1">! Initialise the hour</line>
        <line t="X" i="244" b="1" n="1">  res%hour = hour</line>
        <line t="X" i="245" b="1" n="1"></line>
        <line t="C" i="246" b="1" n="1">! Initialise the minute</line>
        <line t="X" i="247" b="1" n="1">  res%minute = minute</line>
        <line t="X" i="248" b="1" n="1"></line>
        <line t="C" i="249" b="1" n="1">! Initialise the second</line>
        <line t="X" i="250" b="1" n="1">  res%second = second</line>
        <line t="X" i="251" b="1" n="1"></line>
        <line t="C" i="252" b="1" n="1">! Initialise the millisecond</line>
        <line t="X" i="253" b="2" n="2">  if( present( millisecond ) ) then</line>
        <line t="X" i="254" b="2" n="2">    res%millisecond = millisecond</line>
        <line t="X" i="255" b="2" n="2"></line>
        <line t="C" i="256" b="2" n="2">!   Initialise the microsecond</line>
        <line t="X" i="257" b="3" n="3">    if( present( microsecond ) ) then</line>
        <line t="X" i="258" b="3" n="3">      res%microsecond = microsecond</line>
        <line t="X" i="259" b="3" n="3"></line>
        <line t="C" i="260" b="3" n="3">!     Initialise the nanosecond</line>
        <line t="X" i="261" b="4" n="4">      if( present( nanosecond ) ) then</line>
        <line t="X" i="262" b="4" n="4">        res%nanosecond = nanosecond</line>
        <line t="X" i="263" b="4" n="3">      end if</line>
        <line t="X" i="264" b="4" n="3"></line>
        <line t="X" i="265" b="4" n="2">    end if</line>
        <line t="X" i="266" b="4" n="2"></line>
        <line t="X" i="267" b="4" n="1">  end if</line>
        <line t="X" i="268" b="4" n="1"></line>
        <line t="C" i="269" b="4" n="1">! Initialise the time zone</line>
        <line t="X" i="270" b="5" n="2">  if( present( time_zone ) ) then</line>
        <line t="X" i="271" b="5" n="2">    res%time_zone = time_zone</line>
        <line t="X" i="272" b="5" n="3">    select case(len_trim(time_zone))</line>
        <line t="X" i="273" b="6" n="3">      case(:2)</line>
        <line t="X" i="274" b="6" n="3">        res%time_zone_designator = iso8601_zone_none</line>
        <line t="X" i="275" b="7" n="3">      case(3)</line>
        <line t="X" i="276" b="7" n="3">        res%time_zone_designator = iso8601_zone_hh</line>
        <line t="X" i="277" b="8" n="3">      case default</line>
        <line t="X" i="278" b="8" n="3">        res%time_zone_designator = iso8601_zone_hhmm</line>
        <line t="X" i="279" b="8" n="2">    end select</line>
        <line t="X" i="280" b="8" n="1">  end if</line>
        <line t="X" i="281" b="8" n="1"></line>
        <line t="EF" i="282" b="8" n="1">end function iso8601_time_specific</line>
        <line t="EF" i="283" b="1" n="1"></line>
        <line t="EF" i="284" b="1" n="1"></line>
        <line t="C" i="285" b="1" n="1">! Time constructor with default integers</line>
        <line k="iso8601_time_default" t="F" i="286" b="1" n="1">pure function iso8601_time_default( hour, minute, second, &amp;</line>
        <line t="X" i="287" b="1" n="1">                                    millisecond, microsecond, nanosecond, &amp;</line>
        <line t="X" i="288" b="1" n="1">                                    time_zone ) result(res)</line>
        <line t="X" i="289" b="1" n="1"></line>
        <line t="C" i="290" b="1" n="1">! The hour</line>
        <line t="X" i="291" b="1" n="1">  integer, intent(in) :: hour</line>
        <line t="X" i="292" b="1" n="1"></line>
        <line t="C" i="293" b="1" n="1">! The minute</line>
        <line t="X" i="294" b="1" n="1">  integer, intent(in) :: minute</line>
        <line t="X" i="295" b="1" n="1"></line>
        <line t="C" i="296" b="1" n="1">! The second</line>
        <line t="X" i="297" b="1" n="1">  integer, intent(in) :: second</line>
        <line t="X" i="298" b="1" n="1"></line>
        <line t="C" i="299" b="1" n="1">! The millisecond</line>
        <line t="X" i="300" b="1" n="1">  integer, optional, intent(in) :: millisecond</line>
        <line t="X" i="301" b="1" n="1"></line>
        <line t="C" i="302" b="1" n="1">! The microsecond</line>
        <line t="X" i="303" b="1" n="1">  integer, optional, intent(in) :: microsecond</line>
        <line t="X" i="304" b="1" n="1"></line>
        <line t="C" i="305" b="1" n="1">! The nanosecond</line>
        <line t="X" i="306" b="1" n="1">  integer, optional, intent(in) :: nanosecond</line>
        <line t="X" i="307" b="1" n="1"></line>
        <line t="C" i="308" b="1" n="1">! The time zone</line>
        <line t="X" i="309" b="1" n="1">  character(len=*), optional, intent(in) :: time_zone</line>
        <line t="X" i="310" b="1" n="1"></line>
        <line t="C" i="311" b="1" n="1">! The constructed structure</line>
        <line t="X" i="312" b="1" n="1">  type(t_iso8601_time) :: res</line>
        <line t="X" i="313" b="1" n="1"></line>
        <line t="C" i="314" b="1" n="1">! Initialise the hour</line>
        <line t="X" i="315" b="1" n="1">  res%hour = int(hour,1)</line>
        <line t="X" i="316" b="1" n="1"></line>
        <line t="C" i="317" b="1" n="1">! Initialise the minute</line>
        <line t="X" i="318" b="1" n="1">  res%minute = int(minute,1)</line>
        <line t="X" i="319" b="1" n="1"></line>
        <line t="C" i="320" b="1" n="1">! Initialise the second</line>
        <line t="X" i="321" b="1" n="1">  res%second = int(second,1)</line>
        <line t="X" i="322" b="1" n="1"></line>
        <line t="C" i="323" b="1" n="1">! Initialise the millisecond</line>
        <line t="X" i="324" b="2" n="2">  if( present( millisecond ) ) then</line>
        <line t="X" i="325" b="2" n="2">    res%millisecond = int(millisecond,2)</line>
        <line t="X" i="326" b="2" n="2"></line>
        <line t="C" i="327" b="2" n="2">!   Initialise the microsecond</line>
        <line t="X" i="328" b="3" n="3">    if( present( microsecond ) ) then</line>
        <line t="X" i="329" b="3" n="3">      res%microsecond = int(microsecond,2)</line>
        <line t="X" i="330" b="3" n="3"></line>
        <line t="C" i="331" b="3" n="3">!     Initialise the nanosecond</line>
        <line t="X" i="332" b="4" n="4">      if( present( nanosecond ) ) then</line>
        <line t="X" i="333" b="4" n="4">        res%nanosecond = int(nanosecond,2)</line>
        <line t="X" i="334" b="4" n="3">      end if</line>
        <line t="X" i="335" b="4" n="3"></line>
        <line t="X" i="336" b="4" n="2">    end if</line>
        <line t="X" i="337" b="4" n="2"></line>
        <line t="X" i="338" b="4" n="1">  end if</line>
        <line t="X" i="339" b="4" n="1"></line>
        <line t="C" i="340" b="4" n="1">! Initialise the time zone</line>
        <line t="X" i="341" b="5" n="2">  if( present( time_zone ) ) then</line>
        <line t="X" i="342" b="5" n="2">    res%time_zone = time_zone</line>
        <line t="X" i="343" b="5" n="3">    select case(len_trim(time_zone))</line>
        <line t="X" i="344" b="6" n="3">      case(:2)</line>
        <line t="X" i="345" b="6" n="3">        res%time_zone_designator = iso8601_zone_none</line>
        <line t="X" i="346" b="7" n="3">      case(3)</line>
        <line t="X" i="347" b="7" n="3">        res%time_zone_designator = iso8601_zone_hh</line>
        <line t="X" i="348" b="8" n="3">      case default</line>
        <line t="X" i="349" b="8" n="3">        res%time_zone_designator = iso8601_zone_hhmm</line>
        <line t="X" i="350" b="8" n="2">    end select</line>
        <line t="X" i="351" b="8" n="1">  end if</line>
        <line t="X" i="352" b="8" n="1"></line>
        <line t="EF" i="353" b="8" n="1">end function iso8601_time_default</line>
        <line t="EF" i="354" b="1" n="1"></line>
        <line t="EF" i="355" b="1" n="1"></line>
        <line t="C" i="356" b="1" n="1">! Initialise from machine clock</line>
        <line k="iso8601_time_now" t="F" i="357" b="1" n="1">function iso8601_time_now() result(res)</line>
        <line t="F" i="358" b="1" n="1"></line>
        <line t="C" i="359" b="1" n="1">! The constructed structure</line>
        <line t="X" i="360" b="1" n="1">  type(t_iso8601_time) :: res</line>
        <line t="X" i="361" b="1" n="1"></line>
        <line t="C" i="362" b="1" n="1">! Local variables</line>
        <line t="X" i="363" b="1" n="1">  integer, dimension(8) :: values</line>
        <line t="X" i="364" b="1" n="1">  character(len=5) :: zone</line>
        <line t="X" i="365" b="1" n="1"></line>
        <line t="C" i="366" b="1" n="1">! Get the machine time</line>
        <line t="X" i="367" b="1" n="1">  call date_and_time( zone=zone, values=values )</line>
        <line t="X" i="368" b="1" n="1"></line>
        <line t="C" i="369" b="1" n="1">! Assign the core return information</line>
        <line t="X" i="370" b="1" n="1">  res%hour        = int(values(5),1)</line>
        <line t="X" i="371" b="1" n="1">  res%minute      = int(values(6),1)</line>
        <line t="X" i="372" b="1" n="1">  res%second      = int(values(7),1)</line>
        <line t="X" i="373" b="1" n="1">  res%millisecond = int(values(8),2)</line>
        <line t="X" i="374" b="1" n="1"></line>
        <line t="C" i="375" b="1" n="1">! Assign ancillary return information</line>
        <line t="X" i="376" b="1" n="1">  res%time_zone = zone</line>
        <line t="X" i="377" b="1" n="1">  res%time_zone_designator = iso8601_zone_hhmm</line>
        <line t="X" i="378" b="1" n="1"></line>
        <line t="EF" i="379" b="1" n="1">end function iso8601_time_now</line>
        <line t="EF" i="380" b="1" n="1"></line>
        <line t="EF" i="381" b="1" n="1"></line>
        <line t="C" i="382" b="1" n="1">! Format a time</line>
        <line k="iso8601_time_to_string" t="F" i="383" b="1" n="1">elemental function iso8601_time_to_string( this, format, size, zone ) result(res)</line>
        <line t="F" i="384" b="1" n="1"></line>
        <line t="C" i="385" b="1" n="1">! The ISO8601 structure</line>
        <line t="X" i="386" b="1" n="1">  class(t_iso8601_time), intent(in) :: this</line>
        <line t="X" i="387" b="1" n="1"></line>
        <line t="C" i="388" b="1" n="1">! The format flag (optional, default to iso8601_hhmmss)</line>
        <line t="X" i="389" b="1" n="1">  integer, optional, intent(in) :: format</line>
        <line t="X" i="390" b="1" n="1"></line>
        <line t="C" i="391" b="1" n="1">! The flag to for base/extended format (optional, default to extended_format)</line>
        <line t="X" i="392" b="1" n="1">  integer, optional, intent(in) :: size</line>
        <line t="X" i="393" b="1" n="1"></line>
        <line t="C" i="394" b="1" n="1">! The flag to show the time zone (optional, default to .true.)</line>
        <line t="X" i="395" b="1" n="1">  logical, optional, intent(in) :: zone</line>
        <line t="X" i="396" b="1" n="1"></line>
        <line t="C" i="397" b="1" n="1">! The resulting string</line>
        <line t="X" i="398" b="1" n="1">  character(len=time_length) :: res</line>
        <line t="X" i="399" b="1" n="1"></line>
        <line t="C" i="400" b="1" n="1">! Local variables</line>
        <line t="X" i="401" b="1" n="1">  character(len=32) :: local</line>
        <line t="X" i="402" b="1" n="1">  integer :: the_format</line>
        <line t="X" i="403" b="1" n="1">  integer :: the_size</line>
        <line t="X" i="404" b="1" n="1">  integer :: fmt_idx</line>
        <line t="X" i="405" b="1" n="1">  character(len=:), allocatable :: tz</line>
        <line t="X" i="406" b="1" n="1"></line>
        <line t="C" i="407" b="1" n="1">! Check inputs</line>
        <line t="X" i="408" b="2" n="2">  if( present(format) ) then</line>
        <line t="X" i="409" b="2" n="2">    the_format = format</line>
        <line t="X" i="410" b="3" n="2">  else</line>
        <line t="X" i="411" b="3" n="2">    the_format = iso8601_hhmmss</line>
        <line t="X" i="412" b="3" n="1">  end if</line>
        <line t="X" i="413" b="4" n="2">  if( present(size) ) then</line>
        <line t="X" i="414" b="4" n="2">    the_size = size</line>
        <line t="X" i="415" b="5" n="2">  else</line>
        <line t="X" i="416" b="5" n="2">    the_size = iso8601_time_extended_format</line>
        <line t="X" i="417" b="5" n="1">  end if</line>
        <line t="X" i="418" b="5" n="1"></line>
        <line t="X" i="419" b="5" n="1"></line>
        <line t="C" i="420" b="5" n="1">! Generate the output</line>
        <line t="X" i="421" b="5" n="1">  fmt_idx = the_format</line>
        <line t="X" i="422" b="5" n="2">  select case( fmt_idx )</line>
        <line t="X" i="423" b="5" n="2"></line>
        <line t="C" i="424" b="5" n="2">!   Basic hh:mm:ss</line>
        <line t="X" i="425" b="6" n="2">    case( iso8601_hhmmss )</line>
        <line t="X" i="426" b="6" n="2">      write( local, time_format( the_size, fmt_idx ) ) &amp;</line>
        <line t="X" i="427" b="6" n="2">             this%hour, this%minute, this%second</line>
        <line t="X" i="428" b="6" n="2"></line>
        <line t="C" i="429" b="6" n="2">!   To milliseconds</line>
        <line t="X" i="430" b="7" n="2">    case( iso8601_hhmmss_s )</line>
        <line t="X" i="431" b="7" n="2">      write( local, time_format( the_size, fmt_idx ) ) &amp;</line>
        <line t="X" i="432" b="7" n="2">             this%hour, this%minute, this%second, &amp;</line>
        <line t="X" i="433" b="7" n="2">             nint( this%millisecond / 100.0 )</line>
        <line t="X" i="434" b="8" n="2">    case( iso8601_hhmmss_ss )</line>
        <line t="X" i="435" b="8" n="2">      write( local, time_format( the_size, fmt_idx ) ) &amp;</line>
        <line t="X" i="436" b="8" n="2">             this%hour, this%minute, this%second, &amp;</line>
        <line t="X" i="437" b="8" n="2">             nint( this%millisecond / 10.0 )</line>
        <line t="X" i="438" b="9" n="2">    case( iso8601_hhmmss_sss )</line>
        <line t="X" i="439" b="9" n="2">      write( local, time_format( the_size, fmt_idx ) ) &amp;</line>
        <line t="X" i="440" b="9" n="2">             this%hour, this%minute, this%second, &amp;</line>
        <line t="X" i="441" b="9" n="2">             this%millisecond</line>
        <line t="X" i="442" b="9" n="2"></line>
        <line t="C" i="443" b="9" n="2">!   To microseconds</line>
        <line t="X" i="444" b="10" n="2">    case( iso8601_hhmmss_sss_sss )</line>
        <line t="X" i="445" b="10" n="2">      write( local, time_format( the_size, fmt_idx ) ) &amp;</line>
        <line t="X" i="446" b="10" n="2">             this%hour, this%minute, this%second, &amp;</line>
        <line t="X" i="447" b="10" n="2">             this%millisecond, this%microsecond</line>
        <line t="X" i="448" b="10" n="2"></line>
        <line t="C" i="449" b="10" n="2">!   To nanoseconds</line>
        <line t="X" i="450" b="11" n="2">    case( iso8601_hhmmss_sss_sss_sss )</line>
        <line t="X" i="451" b="11" n="2">      write( local, time_format( the_size, fmt_idx ) ) &amp;</line>
        <line t="X" i="452" b="11" n="2">             this%hour, this%minute, this%second, &amp;</line>
        <line t="X" i="453" b="11" n="2">             this%millisecond, this%microsecond, this%nanosecond</line>
        <line t="X" i="454" b="11" n="2"></line>
        <line t="C" i="455" b="11" n="2">!   Simplified hh:mm</line>
        <line t="X" i="456" b="12" n="2">    case( iso8601_hhmm )</line>
        <line t="X" i="457" b="12" n="2">      write( local, time_format( the_size, fmt_idx ) ) &amp;</line>
        <line t="X" i="458" b="12" n="2">             this%hour, this%minute</line>
        <line t="X" i="459" b="12" n="2"></line>
        <line t="C" i="460" b="12" n="2">!   Minimum hh</line>
        <line t="X" i="461" b="13" n="2">    case( iso8601_hh )</line>
        <line t="X" i="462" b="13" n="2">      write( local, time_format( the_size, fmt_idx ) ) &amp;</line>
        <line t="X" i="463" b="13" n="2">             this%hour</line>
        <line t="X" i="464" b="13" n="2"></line>
        <line t="X" i="465" b="13" n="1">  end select</line>
        <line t="X" i="466" b="13" n="1"></line>
        <line t="C" i="467" b="13" n="1">! Append the zone</line>
        <line t="X" i="468" b="14" n="2">  if( present(zone) ) then</line>
        <line t="X" i="469" b="14" n="2"></line>
        <line t="C" i="470" b="14" n="2">!   User selection</line>
        <line t="X" i="471" b="15" n="3">    if( zone ) then</line>
        <line t="X" i="472" b="15" n="3">      tz = this%iso8601_time_zone_to_string( the_size )</line>
        <line t="X" i="473" b="16" n="3">    else</line>
        <line t="X" i="474" b="16" n="3">      tz = ''</line>
        <line t="X" i="475" b="16" n="2">    end if</line>
        <line t="X" i="476" b="16" n="2"></line>
        <line t="X" i="477" b="17" n="2">  else</line>
        <line t="X" i="478" b="17" n="2"></line>
        <line t="C" i="479" b="17" n="2">!   Default to zone appended</line>
        <line t="X" i="480" b="17" n="2">    tz = this%iso8601_time_zone_to_string( the_size )</line>
        <line t="X" i="481" b="17" n="2"></line>
        <line t="X" i="482" b="17" n="1">  end if</line>
        <line t="X" i="483" b="17" n="1"></line>
        <line t="C" i="484" b="17" n="1">! Return the formatted string</line>
        <line t="X" i="485" b="17" n="1">  res = trim(local) // trim(tz)</line>
        <line t="X" i="486" b="17" n="1"></line>
        <line t="EF" i="487" b="17" n="1">end function iso8601_time_to_string</line>
        <line t="EF" i="488" b="1" n="1"></line>
        <line t="EF" i="489" b="1" n="1"></line>
        <line t="C" i="490" b="1" n="1">! Build the zone string</line>
        <line k="iso8601_time_zone_to_string" t="F" i="491" b="1" n="1">pure function iso8601_time_zone_to_string( this, size ) result(res)</line>
        <line t="F" i="492" b="1" n="1"></line>
        <line t="C" i="493" b="1" n="1">! The data structure</line>
        <line t="X" i="494" b="1" n="1">  class(t_iso8601_time), intent(in) :: this</line>
        <line t="X" i="495" b="1" n="1"></line>
        <line t="C" i="496" b="1" n="1">! Format for the zone string generation</line>
        <line t="X" i="497" b="1" n="1">  integer, intent(in) :: size</line>
        <line t="X" i="498" b="1" n="1"></line>
        <line t="C" i="499" b="1" n="1">! The resulting zone string</line>
        <line t="X" i="500" b="1" n="1">  character(len=:), allocatable :: res</line>
        <line t="X" i="501" b="1" n="1"></line>
        <line t="C" i="502" b="1" n="1">! Select the configured zone type</line>
        <line t="X" i="503" b="1" n="2">  select case( this%time_zone_designator )</line>
        <line t="X" i="504" b="1" n="2"></line>
        <line t="C" i="505" b="1" n="2">!   No specific zone</line>
        <line t="X" i="506" b="2" n="2">    case(iso8601_zone_none)</line>
        <line t="X" i="507" b="2" n="2">      res = utc</line>
        <line t="X" i="508" b="2" n="2"></line>
        <line t="C" i="509" b="2" n="2">!   Reduce accuracy zone</line>
        <line t="X" i="510" b="3" n="2">    case(iso8601_zone_hh)</line>
        <line t="X" i="511" b="3" n="2">      res = this%time_zone(:3)</line>
        <line t="X" i="512" b="3" n="2"></line>
        <line t="C" i="513" b="3" n="2">!   Full accuracy zone</line>
        <line t="X" i="514" b="4" n="2">    case(iso8601_zone_hhmm)</line>
        <line t="X" i="515" b="5" n="3">      if( size == iso8601_time_extended_format ) then</line>
        <line t="X" i="516" b="6" n="4">        if( index( this%time_zone, ":" ) == 0 ) then</line>
        <line t="X" i="517" b="6" n="4">          res = this%time_zone(:3) // ":" // this%time_zone(4:5)</line>
        <line t="X" i="518" b="7" n="4">        else</line>
        <line t="X" i="519" b="7" n="4">          res = this%time_zone</line>
        <line t="X" i="520" b="7" n="3">        end if</line>
        <line t="X" i="521" b="8" n="3">      else</line>
        <line t="X" i="522" b="9" n="4">        if( index( this%time_zone, ":" ) /= 0 ) then</line>
        <line t="X" i="523" b="9" n="4">          res = this%time_zone(:3) // this%time_zone(5:6)</line>
        <line t="X" i="524" b="10" n="4">        else</line>
        <line t="X" i="525" b="10" n="4">          res = this%time_zone</line>
        <line t="X" i="526" b="10" n="3">        end if</line>
        <line t="X" i="527" b="10" n="2">      end if</line>
        <line t="X" i="528" b="10" n="2"></line>
        <line t="X" i="529" b="10" n="1">  end select</line>
        <line t="X" i="530" b="10" n="1"></line>
        <line t="EF" i="531" b="10" n="1">end function iso8601_time_zone_to_string</line>
        <line t="EF" i="532" b="1" n="1"></line>
        <line t="EF" i="533" b="1" n="1"></line>
        <line t="C" i="534" b="1" n="1">! Get attribute hour</line>
        <line k="iso8601_time_get_hour" t="F" i="535" b="1" n="1">elemental function iso8601_time_get_hour( this ) result(res)</line>
        <line t="F" i="536" b="1" n="1"></line>
        <line t="C" i="537" b="1" n="1">! The data structure</line>
        <line t="X" i="538" b="1" n="1">  class(t_iso8601_time), intent(in) :: this</line>
        <line t="X" i="539" b="1" n="1"></line>
        <line t="C" i="540" b="1" n="1">! The parameter value to be returned</line>
        <line t="X" i="541" b="1" n="1">  integer(kind=1) :: res</line>
        <line t="X" i="542" b="1" n="1"></line>
        <line t="C" i="543" b="1" n="1">! Return the value</line>
        <line t="X" i="544" b="1" n="1">  res = this%hour</line>
        <line t="X" i="545" b="1" n="1"></line>
        <line t="EF" i="546" b="1" n="1">end function iso8601_time_get_hour</line>
        <line t="EF" i="547" b="1" n="1"></line>
        <line t="EF" i="548" b="1" n="1"></line>
        <line t="C" i="549" b="1" n="1">! Set attribute hour</line>
        <line k="iso8601_time_set_hour" t="S" i="550" b="1" n="1">elemental subroutine iso8601_time_set_hour( this, value )</line>
        <line t="S" i="551" b="1" n="1"></line>
        <line t="C" i="552" b="1" n="1">! The data structure</line>
        <line t="X" i="553" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="554" b="1" n="1"></line>
        <line t="C" i="555" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="556" b="1" n="1">  integer(kind=1), intent(in) :: value</line>
        <line t="X" i="557" b="1" n="1"></line>
        <line t="C" i="558" b="1" n="1">! Set the value</line>
        <line t="X" i="559" b="1" n="1">  this%hour = value</line>
        <line t="X" i="560" b="1" n="1"></line>
        <line t="ES" i="561" b="1" n="1">end subroutine iso8601_time_set_hour</line>
        <line t="ES" i="562" b="1" n="1"></line>
        <line t="ES" i="563" b="1" n="1"></line>
        <line t="C" i="564" b="1" n="1">! Set attribute hour (from default integer)</line>
        <line k="iso8601_time_set_hour_default" t="S" i="565" b="1" n="1">elemental subroutine iso8601_time_set_hour_default( this, value )</line>
        <line t="S" i="566" b="1" n="1"></line>
        <line t="C" i="567" b="1" n="1">! The data structure</line>
        <line t="X" i="568" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="569" b="1" n="1"></line>
        <line t="C" i="570" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="571" b="1" n="1">  integer, intent(in) :: value</line>
        <line t="X" i="572" b="1" n="1"></line>
        <line t="C" i="573" b="1" n="1">! Set the value</line>
        <line t="X" i="574" b="1" n="1">  this%hour = int(value,1)</line>
        <line t="X" i="575" b="1" n="1"></line>
        <line t="ES" i="576" b="1" n="1">end subroutine iso8601_time_set_hour_default</line>
        <line t="ES" i="577" b="1" n="1"></line>
        <line t="ES" i="578" b="1" n="1"></line>
        <line t="C" i="579" b="1" n="1">! Get attribute minute</line>
        <line k="iso8601_time_get_minute" t="F" i="580" b="1" n="1">elemental function iso8601_time_get_minute( this ) result(res)</line>
        <line t="F" i="581" b="1" n="1"></line>
        <line t="C" i="582" b="1" n="1">! The data structure</line>
        <line t="X" i="583" b="1" n="1">  class(t_iso8601_time), intent(in) :: this</line>
        <line t="X" i="584" b="1" n="1"></line>
        <line t="C" i="585" b="1" n="1">! The parameter value to be returned</line>
        <line t="X" i="586" b="1" n="1">  integer(kind=1) :: res</line>
        <line t="X" i="587" b="1" n="1"></line>
        <line t="C" i="588" b="1" n="1">! Return the value</line>
        <line t="X" i="589" b="1" n="1">  res = this%minute</line>
        <line t="X" i="590" b="1" n="1"></line>
        <line t="EF" i="591" b="1" n="1">end function iso8601_time_get_minute</line>
        <line t="EF" i="592" b="1" n="1"></line>
        <line t="EF" i="593" b="1" n="1"></line>
        <line t="C" i="594" b="1" n="1">! Set attribute minute</line>
        <line k="iso8601_time_set_minute" t="S" i="595" b="1" n="1">elemental subroutine iso8601_time_set_minute( this, value )</line>
        <line t="S" i="596" b="1" n="1"></line>
        <line t="C" i="597" b="1" n="1">! The data structure</line>
        <line t="X" i="598" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="599" b="1" n="1"></line>
        <line t="C" i="600" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="601" b="1" n="1">  integer(kind=1), intent(in) :: value</line>
        <line t="X" i="602" b="1" n="1"></line>
        <line t="C" i="603" b="1" n="1">! Set the value</line>
        <line t="X" i="604" b="1" n="1">  this%minute = value</line>
        <line t="X" i="605" b="1" n="1"></line>
        <line t="ES" i="606" b="1" n="1">end subroutine iso8601_time_set_minute</line>
        <line t="ES" i="607" b="1" n="1"></line>
        <line t="ES" i="608" b="1" n="1"></line>
        <line t="C" i="609" b="1" n="1">! Set attribute minute (from default integer)</line>
        <line k="iso8601_time_set_minute_default" t="S" i="610" b="1" n="1">elemental subroutine iso8601_time_set_minute_default( this, value )</line>
        <line t="S" i="611" b="1" n="1"></line>
        <line t="C" i="612" b="1" n="1">! The data structure</line>
        <line t="X" i="613" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="614" b="1" n="1"></line>
        <line t="C" i="615" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="616" b="1" n="1">  integer, intent(in) :: value</line>
        <line t="X" i="617" b="1" n="1"></line>
        <line t="C" i="618" b="1" n="1">! Set the value</line>
        <line t="X" i="619" b="1" n="1">  this%minute = int(value,1)</line>
        <line t="X" i="620" b="1" n="1"></line>
        <line t="ES" i="621" b="1" n="1">end subroutine iso8601_time_set_minute_default</line>
        <line t="ES" i="622" b="1" n="1"></line>
        <line t="C" i="623" b="1" n="1">! Get attribute second</line>
        <line k="iso8601_time_get_second" t="F" i="624" b="1" n="1">elemental function iso8601_time_get_second( this ) result(res)</line>
        <line t="F" i="625" b="1" n="1"></line>
        <line t="C" i="626" b="1" n="1">! The data structure</line>
        <line t="X" i="627" b="1" n="1">  class(t_iso8601_time), intent(in) :: this</line>
        <line t="X" i="628" b="1" n="1"></line>
        <line t="C" i="629" b="1" n="1">! The parameter value to be returned</line>
        <line t="X" i="630" b="1" n="1">  integer(kind=1) :: res</line>
        <line t="X" i="631" b="1" n="1"></line>
        <line t="C" i="632" b="1" n="1">! Return the value</line>
        <line t="X" i="633" b="1" n="1">  res = this%second</line>
        <line t="X" i="634" b="1" n="1"></line>
        <line t="EF" i="635" b="1" n="1">end function iso8601_time_get_second</line>
        <line t="EF" i="636" b="1" n="1"></line>
        <line t="C" i="637" b="1" n="1">! Set attribute second</line>
        <line k="iso8601_time_set_second" t="S" i="638" b="1" n="1">elemental subroutine iso8601_time_set_second( this, value )</line>
        <line t="S" i="639" b="1" n="1"></line>
        <line t="C" i="640" b="1" n="1">! The data structure</line>
        <line t="X" i="641" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="642" b="1" n="1"></line>
        <line t="C" i="643" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="644" b="1" n="1">  integer(kind=1), intent(in) :: value</line>
        <line t="X" i="645" b="1" n="1"></line>
        <line t="C" i="646" b="1" n="1">! Set the value</line>
        <line t="X" i="647" b="1" n="1">  this%second = value</line>
        <line t="X" i="648" b="1" n="1"></line>
        <line t="ES" i="649" b="1" n="1">end subroutine iso8601_time_set_second</line>
        <line k="iso8601_time_set_second_default" t="S" i="650" b="1" n="1">elemental subroutine iso8601_time_set_second_default( this, value )</line>
        <line t="S" i="651" b="1" n="1"></line>
        <line t="C" i="652" b="1" n="1">! The data structure</line>
        <line t="X" i="653" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="654" b="1" n="1"></line>
        <line t="C" i="655" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="656" b="1" n="1">  integer, intent(in) :: value</line>
        <line t="X" i="657" b="1" n="1"></line>
        <line t="C" i="658" b="1" n="1">! Set the value</line>
        <line t="X" i="659" b="1" n="1">  this%second = int(value,1)</line>
        <line t="X" i="660" b="1" n="1"></line>
        <line t="ES" i="661" b="1" n="1">end subroutine iso8601_time_set_second_default</line>
        <line t="ES" i="662" b="1" n="1"></line>
        <line t="C" i="663" b="1" n="1">! Get attribute millisecond</line>
        <line k="iso8601_time_get_millisecond" t="F" i="664" b="1" n="1">elemental function iso8601_time_get_millisecond( this ) result(res)</line>
        <line t="F" i="665" b="1" n="1"></line>
        <line t="C" i="666" b="1" n="1">! The data structure</line>
        <line t="X" i="667" b="1" n="1">  class(t_iso8601_time), intent(in) :: this</line>
        <line t="X" i="668" b="1" n="1"></line>
        <line t="C" i="669" b="1" n="1">! The parameter value to be returned</line>
        <line t="X" i="670" b="1" n="1">  integer(kind=2) :: res</line>
        <line t="X" i="671" b="1" n="1"></line>
        <line t="C" i="672" b="1" n="1">! Return the value</line>
        <line t="X" i="673" b="1" n="1">  res = this%millisecond</line>
        <line t="X" i="674" b="1" n="1"></line>
        <line t="EF" i="675" b="1" n="1">end function iso8601_time_get_millisecond</line>
        <line t="EF" i="676" b="1" n="1"></line>
        <line t="C" i="677" b="1" n="1">! Set attribute millisecond</line>
        <line k="iso8601_time_set_millisecond" t="S" i="678" b="1" n="1">elemental subroutine iso8601_time_set_millisecond( this, value )</line>
        <line t="S" i="679" b="1" n="1"></line>
        <line t="C" i="680" b="1" n="1">! The data structure</line>
        <line t="X" i="681" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="682" b="1" n="1"></line>
        <line t="C" i="683" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="684" b="1" n="1">  integer(kind=2), intent(in) :: value</line>
        <line t="X" i="685" b="1" n="1"></line>
        <line t="C" i="686" b="1" n="1">! Set the value</line>
        <line t="X" i="687" b="1" n="1">  this%millisecond = value</line>
        <line t="X" i="688" b="1" n="1"></line>
        <line t="ES" i="689" b="1" n="1">end subroutine iso8601_time_set_millisecond</line>
        <line k="iso8601_time_set_millisecond_default" t="S" i="690" b="1" n="1">elemental subroutine iso8601_time_set_millisecond_default( this, value )</line>
        <line t="S" i="691" b="1" n="1"></line>
        <line t="C" i="692" b="1" n="1">! The data structure</line>
        <line t="X" i="693" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="694" b="1" n="1"></line>
        <line t="C" i="695" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="696" b="1" n="1">  integer, intent(in) :: value</line>
        <line t="X" i="697" b="1" n="1"></line>
        <line t="C" i="698" b="1" n="1">! Set the value</line>
        <line t="X" i="699" b="1" n="1">  this%millisecond = int(value,2)</line>
        <line t="X" i="700" b="1" n="1"></line>
        <line t="ES" i="701" b="1" n="1">end subroutine iso8601_time_set_millisecond_default</line>
        <line t="ES" i="702" b="1" n="1"></line>
        <line t="C" i="703" b="1" n="1">! Get attribute microsecond</line>
        <line k="iso8601_time_get_microsecond" t="F" i="704" b="1" n="1">elemental function iso8601_time_get_microsecond( this ) result(res)</line>
        <line t="F" i="705" b="1" n="1"></line>
        <line t="C" i="706" b="1" n="1">! The data structure</line>
        <line t="X" i="707" b="1" n="1">  class(t_iso8601_time), intent(in) :: this</line>
        <line t="X" i="708" b="1" n="1"></line>
        <line t="C" i="709" b="1" n="1">! The parameter value to be returned</line>
        <line t="X" i="710" b="1" n="1">  integer(kind=2) :: res</line>
        <line t="X" i="711" b="1" n="1"></line>
        <line t="C" i="712" b="1" n="1">! Return the value</line>
        <line t="X" i="713" b="1" n="1">  res = this%microsecond</line>
        <line t="X" i="714" b="1" n="1"></line>
        <line t="EF" i="715" b="1" n="1">end function iso8601_time_get_microsecond</line>
        <line t="EF" i="716" b="1" n="1"></line>
        <line t="C" i="717" b="1" n="1">! Set attribute microsecond</line>
        <line k="iso8601_time_set_microsecond" t="S" i="718" b="1" n="1">elemental subroutine iso8601_time_set_microsecond( this, value )</line>
        <line t="S" i="719" b="1" n="1"></line>
        <line t="C" i="720" b="1" n="1">! The data structure</line>
        <line t="X" i="721" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="722" b="1" n="1"></line>
        <line t="C" i="723" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="724" b="1" n="1">  integer(kind=2), intent(in) :: value</line>
        <line t="X" i="725" b="1" n="1"></line>
        <line t="C" i="726" b="1" n="1">! Set the value</line>
        <line t="X" i="727" b="1" n="1">  this%microsecond = value</line>
        <line t="X" i="728" b="1" n="1"></line>
        <line t="ES" i="729" b="1" n="1">end subroutine iso8601_time_set_microsecond</line>
        <line k="iso8601_time_set_microsecond_default" t="S" i="730" b="1" n="1">elemental subroutine iso8601_time_set_microsecond_default( this, value )</line>
        <line t="S" i="731" b="1" n="1"></line>
        <line t="C" i="732" b="1" n="1">! The data structure</line>
        <line t="X" i="733" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="734" b="1" n="1"></line>
        <line t="C" i="735" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="736" b="1" n="1">  integer, intent(in) :: value</line>
        <line t="X" i="737" b="1" n="1"></line>
        <line t="C" i="738" b="1" n="1">! Set the value</line>
        <line t="X" i="739" b="1" n="1">  this%microsecond = int(value,2)</line>
        <line t="X" i="740" b="1" n="1"></line>
        <line t="ES" i="741" b="1" n="1">end subroutine iso8601_time_set_microsecond_default</line>
        <line t="ES" i="742" b="1" n="1"></line>
        <line t="C" i="743" b="1" n="1">! Get attribute nanosecond</line>
        <line k="iso8601_time_get_nanosecond" t="F" i="744" b="1" n="1">elemental function iso8601_time_get_nanosecond( this ) result(res)</line>
        <line t="F" i="745" b="1" n="1"></line>
        <line t="C" i="746" b="1" n="1">! The data structure</line>
        <line t="X" i="747" b="1" n="1">  class(t_iso8601_time), intent(in) :: this</line>
        <line t="X" i="748" b="1" n="1"></line>
        <line t="C" i="749" b="1" n="1">! The parameter value to be returned</line>
        <line t="X" i="750" b="1" n="1">  integer(kind=2) :: res</line>
        <line t="X" i="751" b="1" n="1"></line>
        <line t="C" i="752" b="1" n="1">! Return the value</line>
        <line t="X" i="753" b="1" n="1">  res = this%nanosecond</line>
        <line t="X" i="754" b="1" n="1"></line>
        <line t="EF" i="755" b="1" n="1">end function iso8601_time_get_nanosecond</line>
        <line t="EF" i="756" b="1" n="1"></line>
        <line t="C" i="757" b="1" n="1">! Set attribute nanosecond</line>
        <line k="iso8601_time_set_nanosecond" t="S" i="758" b="1" n="1">elemental subroutine iso8601_time_set_nanosecond( this, value )</line>
        <line t="S" i="759" b="1" n="1"></line>
        <line t="C" i="760" b="1" n="1">! The data structure</line>
        <line t="X" i="761" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="762" b="1" n="1"></line>
        <line t="C" i="763" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="764" b="1" n="1">  integer(kind=2), intent(in) :: value</line>
        <line t="X" i="765" b="1" n="1"></line>
        <line t="C" i="766" b="1" n="1">! Set the value</line>
        <line t="X" i="767" b="1" n="1">  this%nanosecond = value</line>
        <line t="X" i="768" b="1" n="1"></line>
        <line t="ES" i="769" b="1" n="1">end subroutine iso8601_time_set_nanosecond</line>
        <line k="iso8601_time_set_nanosecond_default" t="S" i="770" b="1" n="1">elemental subroutine iso8601_time_set_nanosecond_default( this, value )</line>
        <line t="S" i="771" b="1" n="1"></line>
        <line t="C" i="772" b="1" n="1">! The data structure</line>
        <line t="X" i="773" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="774" b="1" n="1"></line>
        <line t="C" i="775" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="776" b="1" n="1">  integer, intent(in) :: value</line>
        <line t="X" i="777" b="1" n="1"></line>
        <line t="C" i="778" b="1" n="1">! Set the value</line>
        <line t="X" i="779" b="1" n="1">  this%nanosecond = int(value,2)</line>
        <line t="X" i="780" b="1" n="1"></line>
        <line t="ES" i="781" b="1" n="1">end subroutine iso8601_time_set_nanosecond_default</line>
        <line t="ES" i="782" b="1" n="1"></line>
        <line t="C" i="783" b="1" n="1">! Get attribute time_zone</line>
        <line k="iso8601_time_get_time_zone" t="F" i="784" b="1" n="1">elemental function iso8601_time_get_time_zone( this ) result(res)</line>
        <line t="F" i="785" b="1" n="1"></line>
        <line t="C" i="786" b="1" n="1">! The data structure</line>
        <line t="X" i="787" b="1" n="1">  class(t_iso8601_time), intent(in) :: this</line>
        <line t="X" i="788" b="1" n="1"></line>
        <line t="C" i="789" b="1" n="1">! The parameter value to be returned</line>
        <line t="X" i="790" b="1" n="1">  character(len=6) :: res</line>
        <line t="X" i="791" b="1" n="1"></line>
        <line t="C" i="792" b="1" n="1">! Return the value</line>
        <line t="X" i="793" b="1" n="1">  res = this%time_zone</line>
        <line t="X" i="794" b="1" n="1"></line>
        <line t="EF" i="795" b="1" n="1">end function iso8601_time_get_time_zone</line>
        <line t="EF" i="796" b="1" n="1"></line>
        <line t="C" i="797" b="1" n="1">! Set attribute time_zone</line>
        <line k="iso8601_time_set_time_zone" t="S" i="798" b="1" n="1">elemental subroutine iso8601_time_set_time_zone( this, value )</line>
        <line t="S" i="799" b="1" n="1"></line>
        <line t="C" i="800" b="1" n="1">! The data structure</line>
        <line t="X" i="801" b="1" n="1">  class(t_iso8601_time), intent(inout) :: this</line>
        <line t="X" i="802" b="1" n="1"></line>
        <line t="C" i="803" b="1" n="1">! The parameter value to set</line>
        <line t="X" i="804" b="1" n="1">  character(len=*), intent(in) :: value</line>
        <line t="X" i="805" b="1" n="1"></line>
        <line t="C" i="806" b="1" n="1">! Set the value</line>
        <line t="X" i="807" b="1" n="1">  this%time_zone = value</line>
        <line t="X" i="808" b="1" n="1"></line>
        <line t="ES" i="809" b="1" n="1">end subroutine iso8601_time_set_time_zone</line>
        <line t="ES" i="810" b="1" n="1"></line>
        <line t="M" i="811" b="1" n="1">end module m_iso8601_time</line>
        <line t="M" i="812" b="1" n="1"></line>
    </code>
</fmx>